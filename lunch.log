06-13 09:31:36.426 [         snp.SocialApplication][INFO ] Starting SocialApplication on DESKTOP-0J1RTFF with PID 16964 (started by anseungbae in E:\프로젝트폴더\사회기업\social\social)
06-13 09:31:36.432 [         snp.SocialApplication][INFO ] The following profiles are active: development
06-13 09:31:36.523 [gEmbeddedWebApplicationContext][INFO ] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Tue Jun 13 09:31:36 KST 2017]; root of context hierarchy
06-13 09:31:37.072 [   o.h.v.internal.util.Version][INFO ] HV000001: Hibernate Validator 5.2.4.Final
06-13 09:31:39.037 [egate$BeanPostProcessorChecker][INFO ] Bean 'aopConfig' of type [class snp.config.AopConfig$$EnhancerBySpringCGLIB$$cd3a42b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.142 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$1d44bbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.192 [nnotationActionEndpointMapping][INFO ] Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-13 09:31:39.271 [egate$BeanPostProcessorChecker][INFO ] Bean 'mybatisConfig' of type [class snp.config.MybatisConfig$$EnhancerBySpringCGLIB$$a944b465] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.536 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSource_default' of type [class org.apache.tomcat.jdbc.pool.DataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.542 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3f302a1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.593 [egate$BeanPostProcessorChecker][INFO ] Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.601 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSourceInitializer' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.633 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionManager' of type [class org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.644 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionConfig' of type [class snp.config.TransactionConfig$$EnhancerBySpringCGLIB$$56b9910] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.723 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdvice' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.731 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdviceAdvisor' of type [class org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:39.781 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [class org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f5ea4ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.127 [egate$BeanPostProcessorChecker][INFO ] Bean 'objectPostProcessor' of type [class org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.137 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4d48bd85' of type [class org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.166 [egate$BeanPostProcessorChecker][INFO ] Bean 'enableGlobalAuthenticationAutowiredConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.177 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeUserDetailsBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.212 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeAuthenticationProviderBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.222 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration' of type [class org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration$$EnhancerBySpringCGLIB$$5c908428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.631 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityProperties' of type [class org.springframework.boot.autoconfigure.security.SecurityProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.657 [egate$BeanPostProcessorChecker][INFO ] Bean 'springBootAuthenticationConfigurerAdapter' of type [class org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration$SpringBootAuthenticationConfigurerAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.665 [egate$BeanPostProcessorChecker][INFO ] Bean 'bootGlobalAuthenticationConfigurationAdapter' of type [class org.springframework.boot.autoconfigure.security.BootGlobalAuthenticationConfiguration$BootGlobalAuthenticationConfigurationAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.668 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$41b3596d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:40.692 [egate$BeanPostProcessorChecker][INFO ] Bean 'authenticationManagerBuilder' of type [class org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.621 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionFactory_default' of type [class snp.spring.mybatis.ProxySqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.638 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionTemplate_default' of type [class org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.644 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.651 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.665 [egate$BeanPostProcessorChecker][INFO ] Bean '__before_repo_method__' of type [class snp.config.AopConfig$$Lambda$9/1906029492] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.675 [egate$BeanPostProcessorChecker][INFO ] Bean '__after_repo_method__' of type [class snp.config.AopConfig$$Lambda$10/1807634633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.675 [egate$BeanPostProcessorChecker][INFO ] Bean 'userAuthenticationProvider' of type [class snp.infra.security.component.UserAuthenticationProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.677 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityConfig.MethodSecurityConfigurer' of type [class snp.config.SecurityConfig$MethodSecurityConfigurer$$EnhancerBySpringCGLIB$$c0dc54bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.733 [egate$BeanPostProcessorChecker][INFO ] Bean 'methodSecurityMetadataSource' of type [class org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:41.748 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d3c86be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-13 09:31:42.459 [TomcatEmbeddedServletContainer][INFO ] Tomcat initialized with port(s): 8001 (http)
06-13 09:31:42.493 [    o.a.c.core.StandardService][INFO ] Starting service Tomcat
06-13 09:31:42.495 [     o.a.c.core.StandardEngine][INFO ] Starting Servlet Engine: Apache Tomcat/8.5.6
06-13 09:31:43.100 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring embedded WebApplicationContext
06-13 09:31:43.100 [ o.s.web.context.ContextLoader][INFO ] Root WebApplicationContext: initialization completed in 6577 ms
06-13 09:31:43.836 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
06-13 09:31:43.839 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
06-13 09:31:43.839 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
06-13 09:31:43.839 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'requestContextFilter' to: [/*]
06-13 09:31:43.842 [ingFilterProxyRegistrationBean][INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
06-13 09:31:43.845 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'dispatcherServlet' to [/]
06-13 09:31:43.847 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'messageDispatcherServlet' to [/services/*]
06-13 09:31:45.440 [s.w.DefaultSecurityFilterChain][INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c91530d, org.springframework.security.web.context.SecurityContextPersistenceFilter@42aae04d, org.springframework.security.web.header.HeaderWriterFilter@135a8c6f, org.springframework.security.web.authentication.logout.LogoutFilter@28ee7bee, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@149b0577, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3679d92e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ba17be6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d70638, org.springframework.security.web.session.SessionManagementFilter@3d19d85, org.springframework.security.web.access.ExceptionTranslationFilter@59fbb34, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1fc713c9]
06-13 09:31:45.615 [a.RequestMappingHandlerAdapter][INFO ] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Tue Jun 13 09:31:36 KST 2017]; root of context hierarchy
06-13 09:31:45.785 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus/{parentMenu}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findMenusByParent(java.lang.String)
06-13 09:31:45.787 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu],methods=[PUT]}" onto public int snp.app.common.CommonController.insertMenu(java.util.Map<java.lang.String, java.lang.Object>)
06-13 09:31:45.788 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findAllMenus()
06-13 09:31:45.791 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteRole(java.lang.String)
06-13 09:31:45.793 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/roles],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoles()
06-13 09:31:45.794 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateRole(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-13 09:31:45.795 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateMenu(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-13 09:31:45.795 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoleMenus(java.lang.String)
06-13 09:31:45.795 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role],methods=[PUT]}" onto public int snp.app.common.CommonController.insertRole(java.util.Map<java.lang.String, java.lang.Object>)
06-13 09:31:45.795 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[POST]}" onto public int snp.app.common.CommonController.saveMenus(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-13 09:31:45.796 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteMenu(java.lang.String)
06-13 09:31:45.799 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/{grpCd}/code],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findCodes(java.lang.String)
06-13 09:31:45.803 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[POST || PUT]}" onto public int snp.app.common.UserController.saveUser(java.util.Map<java.lang.String, java.lang.Object>)
06-13 09:31:45.804 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find/{page}/{keyword}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.Integer,java.lang.String)
06-13 09:31:45.804 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.String)
06-13 09:31:45.806 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.common.UserController.findUsers(java.lang.Integer)
06-13 09:31:45.807 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[DELETE]}" onto public int snp.app.common.UserController.deleteUser(java.lang.Integer)
06-13 09:31:45.808 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[GET]}" onto public snp.infra.user.model.User snp.app.common.UserController.getLoggedInUser()
06-13 09:31:45.820 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics-corp/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.findCorpAvg2Excel(javax.servlet.http.HttpServletResponse,int) throws java.lang.Exception
06-13 09:31:45.826 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/cooperationkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findCooperationKpi(int,int)
06-13 09:31:45.827 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level2],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailGrade(java.lang.String)
06-13 09:31:45.828 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpidetail/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailRate(java.lang.String)
06-13 09:31:45.830 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/socialkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findSocialKpi(int,int)
06-13 09:31:45.833 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/savekpi],methods=[POST]}" onto public int snp.app.corp.CorpController.saveKpi(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-13 09:31:45.834 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/villagekpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findVillageKpi(int,int)
06-13 09:31:45.835 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/grade],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeGrade(java.lang.String)
06-13 09:31:45.836 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeRate()
06-13 09:31:45.838 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/corps],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorps(java.lang.String)
06-13 09:31:45.841 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiRate(java.lang.String)
06-13 09:31:45.844 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeGrade()
06-13 09:31:45.847 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllRate()
06-13 09:31:45.849 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorpKeyword(java.lang.String)
06-13 09:31:45.851 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllGrade()
06-13 09:31:45.852 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeRate(java.lang.String)
06-13 09:31:45.853 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorRate(java.lang.String)
06-13 09:31:45.853 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionGrade(java.lang.String)
06-13 09:31:45.874 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level1],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiGrade(java.lang.String)
06-13 09:31:45.875 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorpsKeyword(java.lang.String)
06-13 09:31:45.876 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorGrade(java.lang.String)
06-13 09:31:45.877 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/corp],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorp(java.lang.String)
06-13 09:31:45.879 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all-corps/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.allCorps2Excel(javax.servlet.http.HttpServletResponse,int,java.lang.String) throws java.lang.Exception
06-13 09:31:45.879 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionRate(java.lang.String)
06-13 09:31:45.893 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCorpInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-13 09:31:45.894 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[POST]}" onto public int snp.app.hq.HqController.saveCenterMgm(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-13 09:31:45.894 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findVillageList()
06-13 09:31:45.895 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findSocialInfo(java.lang.Integer)
06-13 09:31:45.897 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(int,int)
06-13 09:31:45.898 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(java.lang.Integer)
06-13 09:31:45.899 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/{corpType}/type],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpList(java.lang.String)
06-13 09:31:45.901 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findSocialList()
06-13 09:31:45.901 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findVillageInfo(java.lang.Integer)
06-13 09:31:45.902 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCenterMgm()
06-13 09:31:45.903 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteSocialInfo(java.lang.Integer)
06-13 09:31:45.904 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveVillageInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-13 09:31:45.908 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveSocialInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-13 09:31:45.913 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCooperationInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-13 09:31:45.914 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCooperationnfo(java.lang.Integer)
06-13 09:31:45.914 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteVillageInfo(java.lang.Integer)
06-13 09:31:45.915 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCooperationList()
06-13 09:31:45.916 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteCooperationInfo(java.lang.Integer)
06-13 09:31:45.917 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpListKeyword(java.lang.String,java.lang.String)
06-13 09:31:45.929 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/login],methods=[POST],params=[userId && password]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws org.springframework.security.core.AuthenticationException
06-13 09:31:45.932 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth],methods=[GET],params=[userId]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.forceAuthenticate(java.lang.String,javax.servlet.http.HttpServletRequest)
06-13 09:31:46.080 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/user],methods=[GET]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.authenticatedUser()
06-13 09:31:46.082 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/ || /index || /app/* || /app/*/* || /app/*/*/*]}" onto public java.lang.String snp.infra.security.IndexController.index()
06-13 09:31:46.087 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
06-13 09:31:46.091 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
06-13 09:31:46.247 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/deps/bower/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-13 09:31:46.247 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-13 09:31:46.247 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-13 09:31:46.505 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-13 09:31:47.362 [.j.e.a.AnnotationMBeanExporter][INFO ] Registering beans for JMX exposure on startup
06-13 09:31:47.386 [o.a.c.http11.Http11NioProtocol][INFO ] Initializing ProtocolHandler ["http-nio-8001"]
06-13 09:31:47.407 [o.a.c.http11.Http11NioProtocol][INFO ] Starting ProtocolHandler [http-nio-8001]
06-13 09:31:47.449 [o.a.t.util.net.NioSelectorPool][INFO ] Using a shared selector for servlet write/read
06-13 09:31:47.486 [TomcatEmbeddedServletContainer][INFO ] Tomcat started on port(s): 8001 (http)
06-13 09:31:47.493 [         snp.SocialApplication][INFO ] Started SocialApplication in 11.613 seconds (JVM running for 12.639)
06-13 09:31:47.594 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
06-13 09:31:47.594 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization started
06-13 09:31:47.622 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
06-13 09:32:11.862 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-13 09:32:11.874 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-13 09:32:11.877 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-13 09:32:13.597 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-13 09:33:33.396 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-13 09:33:33.400 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-13 09:33:33.400 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-13 09:33:33.402 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-13 09:33:33.410 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-13 09:33:33.420 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-13 09:33:33.420 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-13 09:33:33.423 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-13 09:33:36.062 [efaultHandlerExceptionResolver][WARN ] Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: Could not read document: Can not deserialize instance of java.util.ArrayList out of START_OBJECT token
 at [Source: java.io.PushbackInputStream@3689796b; line: 1, column: 1]; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Can not deserialize instance of java.util.ArrayList out of START_OBJECT token
 at [Source: java.io.PushbackInputStream@3689796b; line: 1, column: 1]
06-13 09:33:37.866 [efaultHandlerExceptionResolver][WARN ] Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: Could not read document: Can not deserialize instance of java.util.ArrayList out of START_OBJECT token
 at [Source: java.io.PushbackInputStream@37f12d36; line: 1, column: 1]; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Can not deserialize instance of java.util.ArrayList out of START_OBJECT token
 at [Source: java.io.PushbackInputStream@37f12d36; line: 1, column: 1]
06-13 09:33:43.790 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-13 09:33:43.793 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-13 09:33:43.795 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-13 09:33:43.795 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-13 09:33:43.800 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-13 09:33:43.799 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-13 09:33:43.807 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-13 09:42:20.836 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-13 09:42:20.836 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-13 09:42:20.839 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-13 09:42:20.841 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-13 09:42:20.850 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-13 09:42:20.858 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-13 09:43:25.853 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-13 09:43:25.856 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-13 09:43:25.856 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-13 09:43:25.858 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-13 09:43:25.861 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-13 09:43:25.864 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-13 09:44:12.827 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-13 09:44:12.830 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-13 09:44:15.749 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-13 09:44:17.742 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-13 09:44:17.744 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-13 09:44:17.753 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-13 09:44:17.760 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-13 09:44:17.767 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-13 09:44:17.778 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

