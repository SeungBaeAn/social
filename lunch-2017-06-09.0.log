06-09 09:29:11.410 [         snp.SocialApplication][INFO ] Starting SocialApplication on DESKTOP-0J1RTFF with PID 11048 (started by anseungbae in E:\프로젝트폴더\사회기업\social\social)
06-09 09:29:11.418 [         snp.SocialApplication][INFO ] The following profiles are active: development
06-09 09:29:11.557 [gEmbeddedWebApplicationContext][INFO ] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Fri Jun 09 09:29:11 KST 2017]; root of context hierarchy
06-09 09:29:12.060 [   o.h.v.internal.util.Version][INFO ] HV000001: Hibernate Validator 5.2.4.Final
06-09 09:29:13.690 [egate$BeanPostProcessorChecker][INFO ] Bean 'aopConfig' of type [class snp.config.AopConfig$$EnhancerBySpringCGLIB$$cd3a42b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:13.790 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$1d44bbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:13.858 [nnotationActionEndpointMapping][INFO ] Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-09 09:29:13.911 [egate$BeanPostProcessorChecker][INFO ] Bean 'mybatisConfig' of type [class snp.config.MybatisConfig$$EnhancerBySpringCGLIB$$a944b465] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.286 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSource_default' of type [class org.apache.tomcat.jdbc.pool.DataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.292 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3f302a1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.327 [egate$BeanPostProcessorChecker][INFO ] Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.336 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSourceInitializer' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.349 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionManager' of type [class org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.358 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionConfig' of type [class snp.config.TransactionConfig$$EnhancerBySpringCGLIB$$56b9910] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.390 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdvice' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.395 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdviceAdvisor' of type [class org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.433 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [class org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f5ea4ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.757 [egate$BeanPostProcessorChecker][INFO ] Bean 'objectPostProcessor' of type [class org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.761 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@b18c4' of type [class org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.793 [egate$BeanPostProcessorChecker][INFO ] Bean 'enableGlobalAuthenticationAutowiredConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.829 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeUserDetailsBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.850 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeAuthenticationProviderBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:14.859 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration' of type [class org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration$$EnhancerBySpringCGLIB$$5c908428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:15.292 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityProperties' of type [class org.springframework.boot.autoconfigure.security.SecurityProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:15.308 [egate$BeanPostProcessorChecker][INFO ] Bean 'springBootAuthenticationConfigurerAdapter' of type [class org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration$SpringBootAuthenticationConfigurerAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:15.317 [egate$BeanPostProcessorChecker][INFO ] Bean 'bootGlobalAuthenticationConfigurationAdapter' of type [class org.springframework.boot.autoconfigure.security.BootGlobalAuthenticationConfiguration$BootGlobalAuthenticationConfigurationAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:15.320 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$41b3596d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:15.359 [egate$BeanPostProcessorChecker][INFO ] Bean 'authenticationManagerBuilder' of type [class org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.030 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionFactory_default' of type [class snp.spring.mybatis.ProxySqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.092 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionTemplate_default' of type [class org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.100 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.104 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.123 [egate$BeanPostProcessorChecker][INFO ] Bean '__before_repo_method__' of type [class snp.config.AopConfig$$Lambda$9/1906029492] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.139 [egate$BeanPostProcessorChecker][INFO ] Bean '__after_repo_method__' of type [class snp.config.AopConfig$$Lambda$10/1807634633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.141 [egate$BeanPostProcessorChecker][INFO ] Bean 'userAuthenticationProvider' of type [class snp.infra.security.component.UserAuthenticationProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.143 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityConfig.MethodSecurityConfigurer' of type [class snp.config.SecurityConfig$MethodSecurityConfigurer$$EnhancerBySpringCGLIB$$c0dc54bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.158 [egate$BeanPostProcessorChecker][INFO ] Bean 'methodSecurityMetadataSource' of type [class org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.191 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d3c86be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 09:29:16.651 [TomcatEmbeddedServletContainer][INFO ] Tomcat initialized with port(s): 8001 (http)
06-09 09:29:16.668 [    o.a.c.core.StandardService][INFO ] Starting service Tomcat
06-09 09:29:16.669 [     o.a.c.core.StandardEngine][INFO ] Starting Servlet Engine: Apache Tomcat/8.5.6
06-09 09:29:16.956 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring embedded WebApplicationContext
06-09 09:29:16.956 [ o.s.web.context.ContextLoader][INFO ] Root WebApplicationContext: initialization completed in 5399 ms
06-09 09:29:17.256 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
06-09 09:29:17.257 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
06-09 09:29:17.257 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
06-09 09:29:17.257 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'requestContextFilter' to: [/*]
06-09 09:29:17.266 [ingFilterProxyRegistrationBean][INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
06-09 09:29:17.268 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'dispatcherServlet' to [/]
06-09 09:29:17.272 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'messageDispatcherServlet' to [/services/*]
06-09 09:29:18.279 [s.w.DefaultSecurityFilterChain][INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c91530d, org.springframework.security.web.context.SecurityContextPersistenceFilter@42aae04d, org.springframework.security.web.header.HeaderWriterFilter@135a8c6f, org.springframework.security.web.authentication.logout.LogoutFilter@28ee7bee, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@149b0577, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3679d92e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ba17be6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d70638, org.springframework.security.web.session.SessionManagementFilter@3d19d85, org.springframework.security.web.access.ExceptionTranslationFilter@59fbb34, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1fc713c9]
06-09 09:29:18.425 [a.RequestMappingHandlerAdapter][INFO ] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Fri Jun 09 09:29:11 KST 2017]; root of context hierarchy
06-09 09:29:18.502 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus/{parentMenu}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findMenusByParent(java.lang.String)
06-09 09:29:18.505 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateMenu(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-09 09:29:18.506 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteMenu(java.lang.String)
06-09 09:29:18.507 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/roles],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoles()
06-09 09:29:18.508 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findAllMenus()
06-09 09:29:18.508 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoleMenus(java.lang.String)
06-09 09:29:18.509 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role],methods=[PUT]}" onto public int snp.app.common.CommonController.insertRole(java.util.Map<java.lang.String, java.lang.Object>)
06-09 09:29:18.510 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateRole(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-09 09:29:18.511 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu],methods=[PUT]}" onto public int snp.app.common.CommonController.insertMenu(java.util.Map<java.lang.String, java.lang.Object>)
06-09 09:29:18.511 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteRole(java.lang.String)
06-09 09:29:18.512 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/{grpCd}/code],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findCodes(java.lang.String)
06-09 09:29:18.513 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[POST]}" onto public int snp.app.common.CommonController.saveMenus(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-09 09:29:18.523 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[DELETE]}" onto public int snp.app.common.UserController.deleteUser(java.lang.Integer)
06-09 09:29:18.524 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[POST || PUT]}" onto public int snp.app.common.UserController.saveUser(java.util.Map<java.lang.String, java.lang.Object>)
06-09 09:29:18.638 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[GET]}" onto public snp.infra.user.model.User snp.app.common.UserController.getLoggedInUser()
06-09 09:29:18.654 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find/{page}/{keyword}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.Integer,java.lang.String)
06-09 09:29:18.658 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.String)
06-09 09:29:18.663 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.common.UserController.findUsers(java.lang.Integer)
06-09 09:29:18.679 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpidetail/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailRate(java.lang.String)
06-09 09:29:18.681 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level2],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailGrade(java.lang.String)
06-09 09:29:18.687 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/cooperationkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findCooperationKpi(int,int)
06-09 09:29:18.691 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics-corp/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.findCorpAvg2Excel(javax.servlet.http.HttpServletResponse,int) throws java.lang.Exception
06-09 09:29:18.725 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeRate(java.lang.String)
06-09 09:29:18.728 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllRate()
06-09 09:29:18.730 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionGrade(java.lang.String)
06-09 09:29:18.735 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorGrade(java.lang.String)
06-09 09:29:18.736 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorpsKeyword(java.lang.String)
06-09 09:29:18.737 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/corps],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorps(java.lang.String)
06-09 09:29:18.738 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all-corps/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.allCorps2Excel(javax.servlet.http.HttpServletResponse,int,java.lang.String) throws java.lang.Exception
06-09 09:29:18.740 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/corp],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorp(java.lang.String)
06-09 09:29:18.740 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorpKeyword(java.lang.String)
06-09 09:29:18.742 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionRate(java.lang.String)
06-09 09:29:18.744 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorRate(java.lang.String)
06-09 09:29:18.746 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/villagekpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findVillageKpi(int,int)
06-09 09:29:18.746 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeGrade()
06-09 09:29:18.747 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/socialkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findSocialKpi(int,int)
06-09 09:29:18.748 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllGrade()
06-09 09:29:18.751 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiRate(java.lang.String)
06-09 09:29:18.751 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeRate()
06-09 09:29:18.752 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/savekpi],methods=[POST]}" onto public int snp.app.corp.CorpController.saveKpi(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-09 09:29:18.753 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/grade],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeGrade(java.lang.String)
06-09 09:29:18.754 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level1],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiGrade(java.lang.String)
06-09 09:29:18.761 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCooperationnfo(java.lang.Integer)
06-09 09:29:18.762 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCooperationInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-09 09:29:18.763 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCooperationList()
06-09 09:29:18.764 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteVillageInfo(java.lang.Integer)
06-09 09:29:18.764 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteCooperationInfo(java.lang.Integer)
06-09 09:29:18.770 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpListKeyword(java.lang.String,java.lang.String)
06-09 09:29:18.771 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCorpInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-09 09:29:18.771 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveSocialInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-09 09:29:18.772 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findVillageInfo(java.lang.Integer)
06-09 09:29:18.773 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[POST]}" onto public int snp.app.hq.HqController.saveCenterMgm(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-09 09:29:18.774 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findVillageList()
06-09 09:29:18.778 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveVillageInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-09 09:29:18.779 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findSocialList()
06-09 09:29:18.779 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(java.lang.Integer)
06-09 09:29:18.780 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(int,int)
06-09 09:29:18.781 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteSocialInfo(java.lang.Integer)
06-09 09:29:18.781 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/{corpType}/type],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpList(java.lang.String)
06-09 09:29:18.784 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCenterMgm()
06-09 09:29:18.830 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findSocialInfo(java.lang.Integer)
06-09 09:29:18.844 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth],methods=[GET],params=[userId]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.forceAuthenticate(java.lang.String,javax.servlet.http.HttpServletRequest)
06-09 09:29:18.845 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/user],methods=[GET]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.authenticatedUser()
06-09 09:29:18.846 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/login],methods=[POST],params=[userId && password]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws org.springframework.security.core.AuthenticationException
06-09 09:29:18.852 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/ || /index || /app/* || /app/*/* || /app/*/*/*]}" onto public java.lang.String snp.infra.security.IndexController.index()
06-09 09:29:18.857 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
06-09 09:29:18.858 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
06-09 09:29:19.007 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/deps/bower/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-09 09:29:19.008 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-09 09:29:19.008 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-09 09:29:19.160 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-09 09:29:19.619 [.j.e.a.AnnotationMBeanExporter][INFO ] Registering beans for JMX exposure on startup
06-09 09:29:19.639 [o.a.c.http11.Http11NioProtocol][INFO ] Initializing ProtocolHandler ["http-nio-8001"]
06-09 09:29:19.653 [o.a.c.http11.Http11NioProtocol][INFO ] Starting ProtocolHandler [http-nio-8001]
06-09 09:29:19.681 [o.a.t.util.net.NioSelectorPool][INFO ] Using a shared selector for servlet write/read
06-09 09:29:19.708 [TomcatEmbeddedServletContainer][INFO ] Tomcat started on port(s): 8001 (http)
06-09 09:29:19.715 [         snp.SocialApplication][INFO ] Started SocialApplication in 8.704 seconds (JVM running for 9.254)
06-09 09:30:09.787 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
06-09 09:30:09.787 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization started
06-09 09:30:09.819 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
06-09 10:21:17.285 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:21:17.305 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:21:17.310 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:21:18.920 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:21:23.141 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:21:25.910 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:21:26.726 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:21:27.389 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:36:52.131 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:36:52.138 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:36:52.141 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:36:52.142 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:36:52.779 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:39:06.240 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:39:06.242 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:39:06.246 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:39:06.248 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:39:06.815 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:48:08.774 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:48:08.776 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:48:08.779 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:48:08.780 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:48:15.536 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:48:15.538 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:48:15.542 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:48:15.544 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:49:02.052 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:49:02.054 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:49:02.056 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:49:02.058 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:49:02.487 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:55:40.168 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:55:40.170 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:55:40.172 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:55:40.174 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:55:40.783 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:55:57.313 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:55:57.418 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:55:57.420 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:55:57.425 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:55:57.426 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:55:57.983 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:55:59.664 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:55:59.735 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:55:59.740 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:55:59.741 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:56:00.108 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:56:00.950 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:56:01.062 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:56:01.064 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:01.067 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:01.069 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:56:01.663 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:56:02.244 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:56:02.316 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:02.319 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:02.321 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:56:02.662 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:56:03.277 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:56:03.350 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:03.357 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:03.359 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:56:03.768 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:56:04.512 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:56:04.584 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:56:04.586 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:04.589 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:04.590 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:56:04.964 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:56:05.644 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:56:05.722 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:05.724 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:05.725 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:56:06.215 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:56:06.724 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:56:06.799 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:06.801 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:06.803 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:56:07.285 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:56:08.007 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 10:56:08.090 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:56:08.093 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:08.098 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:56:08.100 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:56:08.588 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 10:58:38.176 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 10:58:38.177 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 10:58:38.179 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 10:58:38.180 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 10:58:38.720 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 11:05:03.382 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-09 11:05:03.382 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 11:05:03.397 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-11 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-09 11:05:03.415 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민761 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-09 11:05:03.525 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-09 11:05:03.525 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE2' 

06-09 11:05:03.527 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-09 11:05:03.529 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-09 11:05:03.545 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-09 11:05:03.545 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-09 11:05:03.553 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-09 11:05:03.557 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'ORG_TYPE' 

06-09 11:05:03.558 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
11. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SE_YN' 

06-09 11:05:03.558 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 11:05:03.563 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE1' 

06-09 11:05:03.736 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-09 11:05:03.737 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-09 11:05:03.743 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-09 11:05:03.743 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
11. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_YN' 

06-09 11:05:03.745 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_COUNT' 

06-09 11:10:40.250 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 11:10:40.252 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 11:12:28.855 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 11:12:31.263 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 11:12:35.245 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 11:12:35.246 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 11:12:35.248 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 11:12:35.250 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 11:12:36.030 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 12:57:10.489 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 12:57:15.715 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 12:57:16.537 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 12:57:17.274 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 12:57:18.068 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 12:57:18.739 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 12:57:30.832 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 12:57:30.840 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 12:57:30.845 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 12:57:30.846 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 12:57:31.516 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:04:02.573 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:04:02.576 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:08:43.988 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:08:43.990 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:09:22.227 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:09:22.231 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:16:32.124 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:16:32.127 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:18:06.583 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:18:06.585 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:18:07.877 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:18:09.210 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:18:10.263 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:18:10.266 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:18:17.206 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:18:17.208 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:18:18.218 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:26:02.403 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-09 13:26:02.403 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:26:02.407 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민121 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-09 13:26:02.407 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-11 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-09 13:26:02.544 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SE_YN' 

06-09 13:26:02.544 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'ORG_TYPE' 

06-09 13:26:02.548 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-09 13:26:02.556 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE1' 

06-09 13:26:02.561 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE2' 

06-09 13:26:02.567 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-09 13:26:02.576 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-09 13:26:02.580 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-09 13:26:02.585 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-09 13:26:02.590 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-09 13:26:02.594 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-09 13:26:02.605 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_YN' 

06-09 13:26:02.610 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_COUNT' 

06-09 13:26:13.786 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:26:13.787 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 13:26:13.790 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 13:26:13.791 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 13:26:14.419 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:32:19.352 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:32:19.403 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE VCK.CORP_TYPE WHEN 1 THEN '사회적기업' WHEN 2 THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE, 
VCK.CORP_SEQ, (SELECT CORP_NM FROM CORP_INFO WHERE CORP_SEQ = VCK.CORP_SEQ) AS CORP_NM, SUM(CASE 
WHEN KPI_TYPE = '01' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_01, SUM(CASE WHEN 
KPI_TYPE = '02' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_02, SUM(CASE WHEN KPI_TYPE 
= '03' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_03, SUM(CASE WHEN KPI_TYPE = 
'04' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_04, SUM(CASE WHEN KPI_TYPE = '05' 
THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_05, SUM(CASE WHEN KPI_TYPE = 'GRADE_TOT' 
THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_GRADE_TOT, SUM(CASE WHEN KPI_TYPE = 
'RATE_TOT' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_RATE_TOT FROM VIEW_CORP_KPI 
AS VCK GROUP BY CORP_SEQ ORDER BY CORP_NM 

06-09 13:32:19.441 [                    jdbc.audit][ERROR] 1. PreparedStatement.execute() SELECT CASE VCK.CORP_TYPE WHEN 1 THEN '사회적기업' WHEN 2 THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE, 
VCK.CORP_SEQ, (SELECT CORP_NM FROM CORP_INFO WHERE CORP_SEQ = VCK.CORP_SEQ) AS CORP_NM, SUM(CASE 
WHEN KPI_TYPE = '01' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_01, SUM(CASE WHEN 
KPI_TYPE = '02' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_02, SUM(CASE WHEN KPI_TYPE 
= '03' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_03, SUM(CASE WHEN KPI_TYPE = 
'04' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_04, SUM(CASE WHEN KPI_TYPE = '05' 
THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_05, SUM(CASE WHEN KPI_TYPE = 'GRADE_TOT' 
THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_GRADE_TOT, SUM(CASE WHEN KPI_TYPE = 
'RATE_TOT' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_RATE_TOT FROM VIEW_CORP_KPI 
AS VCK GROUP BY CORP_SEQ ORDER BY CORP_NM 

java.sql.SQLException: The user specified as a definer ('daegu_user'@'%') does not exist
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2677)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2549)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:417)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor80.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy69.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy84.gridCorpAll(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy85.gridCorpAll(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy85.gridCorpAll(Unknown Source)
	at snp.app.corp.CorpService.gridCorp(CorpService.java:529)
	at snp.app.corp.CorpService$$FastClassBySpringCGLIB$$28f1164d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at snp.app.corp.CorpService$$EnhancerBySpringCGLIB$$c8a20c56.gridCorp(<generated>)
	at snp.app.corp.CorpController.gridCorp(CorpController.java:119)
	at snp.app.corp.CorpController$$FastClassBySpringCGLIB$$fc5fcd04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at snp.app.corp.CorpController$$EnhancerBySpringCGLIB$$9e9162e5.gridCorp(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:220)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
06-09 13:32:19.443 [                  jdbc.sqlonly][ERROR]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE VCK.CORP_TYPE WHEN 1 THEN '사회적기업' WHEN 2 THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE, 
VCK.CORP_SEQ, (SELECT CORP_NM FROM CORP_INFO WHERE CORP_SEQ = VCK.CORP_SEQ) AS CORP_NM, SUM(CASE 
WHEN KPI_TYPE = '01' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_01, SUM(CASE WHEN 
KPI_TYPE = '02' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_02, SUM(CASE WHEN KPI_TYPE 
= '03' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_03, SUM(CASE WHEN KPI_TYPE = 
'04' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_04, SUM(CASE WHEN KPI_TYPE = '05' 
THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_05, SUM(CASE WHEN KPI_TYPE = 'GRADE_TOT' 
THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_GRADE_TOT, SUM(CASE WHEN KPI_TYPE = 
'RATE_TOT' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_RATE_TOT FROM VIEW_CORP_KPI 
AS VCK GROUP BY CORP_SEQ ORDER BY CORP_NM 

java.sql.SQLException: The user specified as a definer ('daegu_user'@'%') does not exist
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2677)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2549)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:417)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor80.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy69.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy84.gridCorpAll(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy85.gridCorpAll(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy85.gridCorpAll(Unknown Source)
	at snp.app.corp.CorpService.gridCorp(CorpService.java:529)
	at snp.app.corp.CorpService$$FastClassBySpringCGLIB$$28f1164d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at snp.app.corp.CorpService$$EnhancerBySpringCGLIB$$c8a20c56.gridCorp(<generated>)
	at snp.app.corp.CorpController.gridCorp(CorpController.java:119)
	at snp.app.corp.CorpController$$FastClassBySpringCGLIB$$fc5fcd04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at snp.app.corp.CorpController$$EnhancerBySpringCGLIB$$9e9162e5.gridCorp(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:220)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
06-09 13:32:19.453 [                jdbc.sqltiming][ERROR] 1. PreparedStatement.execute() FAILED! SELECT CASE VCK.CORP_TYPE WHEN 1 THEN '사회적기업' WHEN 2 THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE, 
VCK.CORP_SEQ, (SELECT CORP_NM FROM CORP_INFO WHERE CORP_SEQ = VCK.CORP_SEQ) AS CORP_NM, SUM(CASE 
WHEN KPI_TYPE = '01' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_01, SUM(CASE WHEN 
KPI_TYPE = '02' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_02, SUM(CASE WHEN KPI_TYPE 
= '03' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_03, SUM(CASE WHEN KPI_TYPE = 
'04' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_04, SUM(CASE WHEN KPI_TYPE = '05' 
THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_05, SUM(CASE WHEN KPI_TYPE = 'GRADE_TOT' 
THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_GRADE_TOT, SUM(CASE WHEN KPI_TYPE = 
'RATE_TOT' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_RATE_TOT FROM VIEW_CORP_KPI 
AS VCK GROUP BY CORP_SEQ ORDER BY CORP_NM 
 {FAILED after 19 msec}
java.sql.SQLException: The user specified as a definer ('daegu_user'@'%') does not exist
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2677)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2549)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:417)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor80.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy69.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy84.gridCorpAll(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy85.gridCorpAll(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy85.gridCorpAll(Unknown Source)
	at snp.app.corp.CorpService.gridCorp(CorpService.java:529)
	at snp.app.corp.CorpService$$FastClassBySpringCGLIB$$28f1164d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at snp.app.corp.CorpService$$EnhancerBySpringCGLIB$$c8a20c56.gridCorp(<generated>)
	at snp.app.corp.CorpController.gridCorp(CorpController.java:119)
	at snp.app.corp.CorpController$$FastClassBySpringCGLIB$$fc5fcd04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at snp.app.corp.CorpController$$EnhancerBySpringCGLIB$$9e9162e5.gridCorp(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:220)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
06-09 13:32:19.506 [.b.f.x.XmlBeanDefinitionReader][INFO ] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
06-09 13:32:19.620 [  o.s.j.s.SQLErrorCodesFactory][INFO ] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
06-09 13:32:19.644 [.c.C.[.[.[.[dispatcherServlet]][ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: The user specified as a definer ('daegu_user'@'%') does not exist
### The error may exist in file [E:\프로젝트폴더\사회기업\social\social\build\resources\main\mybatis\mapper\app\corp\corp.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT   CASE VCK.CORP_TYPE WHEN 1 THEN '사회적기업'   WHEN 2 THEN '마을기업'   ELSE '협동조합' END AS CORP_TYPE,   VCK.CORP_SEQ,   (SELECT CORP_NM FROM CORP_INFO WHERE CORP_SEQ = VCK.CORP_SEQ) AS CORP_NM,   SUM(CASE WHEN KPI_TYPE = '01' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_01,   SUM(CASE WHEN KPI_TYPE = '02' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_02,   SUM(CASE WHEN KPI_TYPE = '03' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_03,   SUM(CASE WHEN KPI_TYPE = '04' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_04,   SUM(CASE WHEN KPI_TYPE = '05' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_05,   SUM(CASE WHEN KPI_TYPE = 'GRADE_TOT' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_GRADE_TOT,   SUM(CASE WHEN KPI_TYPE = 'RATE_TOT' THEN IFNULL(ROUND(RESULT,1),0) ELSE 0 END) AS KPI_TYPE_RATE_TOT  FROM VIEW_CORP_KPI AS VCK  GROUP BY CORP_SEQ  ORDER BY CORP_NM
### Cause: java.sql.SQLException: The user specified as a definer ('daegu_user'@'%') does not exist
; uncategorized SQLException for SQL []; SQL state [HY000]; error code [1449]; The user specified as a definer ('daegu_user'@'%') does not exist; nested exception is java.sql.SQLException: The user specified as a definer ('daegu_user'@'%') does not exist] with root cause
java.sql.SQLException: The user specified as a definer ('daegu_user'@'%') does not exist
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2677)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2549)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1192)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:417)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor80.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy69.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy84.gridCorpAll(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy85.gridCorpAll(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy85.gridCorpAll(Unknown Source)
	at snp.app.corp.CorpService.gridCorp(CorpService.java:529)
	at snp.app.corp.CorpService$$FastClassBySpringCGLIB$$28f1164d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at snp.app.corp.CorpService$$EnhancerBySpringCGLIB$$c8a20c56.gridCorp(<generated>)
	at snp.app.corp.CorpController.gridCorp(CorpController.java:119)
	at snp.app.corp.CorpController$$FastClassBySpringCGLIB$$fc5fcd04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at snp.app.corp.CorpController$$EnhancerBySpringCGLIB$$9e9162e5.gridCorp(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:220)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
06-09 13:32:29.643 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:32:29.644 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 13:32:29.646 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 13:32:29.648 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 13:32:30.341 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 13:32:30.342 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 13:32:30.344 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 13:32:31.055 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 13:32:33.217 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 13:32:33.219 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 14:16:52.832 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-09 14:17:13.068 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 14:17:13.076 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 14:17:13.082 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 14:17:13.084 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 14:17:13.699 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 14:17:27.566 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 14:17:27.568 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 14:47:24.735 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 14:47:24.760 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID , USER_NAME , CORP_SEQ , EMAIL , PHONE_NO1 , PHONE_NO2 , PASSWORD , ADMIN_YN 
, USE_YN FROM USERS 

06-09 14:49:47.031 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 14:49:47.034 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 14:49:49.744 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 14:50:00.568 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 14:50:00.572 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 14:53:46.087 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 14:53:46.089 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 14:53:48.682 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 14:53:54.469 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 14:53:54.471 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 15:02:29.643 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:02:29.647 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 15:26:22.920 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:26:22.928 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 15:26:25.991 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:26:25.993 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 15:28:12.655 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:28:12.658 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 15:29:47.400 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:29:47.402 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 15:34:29.235 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:34:29.238 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 15:40:57.726 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:40:57.729 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 15:41:02.535 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:41:02.537 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 15:44:19.119 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:44:19.120 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 15:44:19.123 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 15:44:19.124 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 15:44:28.789 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:44:28.791 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 15:54:10.257 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:54:10.259 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 15:54:12.191 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 15:58:47.004 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:58:47.006 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 15:58:47.008 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 15:58:47.010 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 15:58:47.549 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 15:58:51.365 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 15:58:51.367 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 16:11:21.591 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:11:21.594 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:11:23.973 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 16:12:06.633 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:12:06.635 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 16:27:22.645 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:27:22.647 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:27:23.213 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 16:27:24.372 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 16:27:39.898 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:27:39.900 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:27:44.466 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-09 16:27:44.467 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:27:44.470 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민2393 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-09 16:27:44.474 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-13 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-09 16:27:44.545 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'COOP_TYPE' 

06-09 16:27:44.545 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'COOP_CONFIG' 

06-09 16:27:44.547 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-09 16:27:44.550 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-09 16:27:44.550 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-09 16:27:44.556 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-09 16:27:44.557 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-09 16:27:44.558 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'ESTABLISH_PURPOSE' 

06-09 16:27:44.562 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LOCAL_PROBLEM' 

06-09 16:27:44.562 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LOCAL_PURPOSE' 

06-09 16:27:44.569 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-09 16:27:48.587 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-09 16:27:48.596 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
2. UPDATE CORP_INFO SET CORP_NM = '24시 플라워 협동조합' , OPEN_DT = '2014-01-01' , SE_YN = NULL , ORG_TYPE 
= '1' , BEFORE_TYPE = '3' , LEG_TYPE1 = NULL , LEG_TYPE2 = NULL , MAIN_TYPE = '1' , SECTOR 
= '3' , HISTORY = '1' , REGION = '6' , LIFE_CHG = '0' , LOCAL_SOL = '0' , CITY_ENL = NULL , 
WEAK_CHG = NULL , WEAK_ENL = NULL , PROD_NM1 = '화환' , PROD_NM2 = '관엽' , PROD_NM3 = NULL , PROD_NM1_PCT 
= '80' , PROD_NM2_PCT = '20' , PROD_NM3_PCT = NULL , PROD_ETC_PCT = NULL , SERVICE_NM1 = NULL 
, SERVICE_NM2 = NULL , SERVICE_NM3 = NULL , SERVICE_NM1_PCT = NULL , SERVICE_NM2_PCT = NULL 
, SERVICE_NM3_PCT = NULL , SERVICE_ETC_PCT = NULL , IN_TOT1 = NULL , IN_SEE1 = NULL , IN_TOT2 
= NULL , IN_SEE2 = NULL , IN_TOT3 = '100' , IN_SEE3 = '0' , OUT_TOT1 = NULL , OUT_SEE1 = NULL 
, OUT_TOT2 = '60' , OUT_SEE2 = NULL , OUT_TOT3 = '40' , OUT_SEE3 = '0' , SAILS_PCT1 = '40' 
, SAILS_PCT2 = '20' , SAILS_PCT3 = '20' , SAILS_PCT4 = NULL , SAILS_PCT5 = '20' , TOT_PAR = 
'6' , TOT_EMP = '6' , MALE_CNT = '3' , FMALE_CNT = '3' , REG_EMP_CNT = NULL , REG_WEEK_TIME 
= NULL , REG_MONTH_PAY = NULL , REG_EMP_TIME = NULL , COM_EMP_CNT = NULL , COM_WEEK_TIME = 
NULL , COM_MONTH_PAY = NULL , COM_EMP_TIME = NULL , CONTRACT_EMP_CNT = NULL , CONTRACT_WEEK_TIME 
= NULL , CONTRACT_MONTH_PAY = NULL , CONTRACT_EMP_TIME = NULL , TIME_EMP_CNT = '4' , TIME_WEEK_TIME 
= NULL , TIME_MONTH_PAY = NULL , TIME_EMP_TIME = NULL , SPE_EMP_CNT = NULL , SPE_WEEK_TIME 
= NULL , SPE_MONTH_PAY = NULL , SPE_EMP_TIME = NULL , VOL_EMP_CNT = NULL , VOL_WEEK_TIME = 
NULL , AVG_YEAR = NULL , WEAK_TOT_EMP = NULL , WEAK_MALE_CNT = NULL , WEAK_FMALE_CNT = NULL 
, WEAK_REG_EMP_CNT = NULL , WEAK_REG_WEEK_TIME = NULL , WEAK_REG_MONTH_PAY = NULL , WEAK_REG_EMP_TIME 
= NULL , WEAK_COM_EMP_CNT = NULL , WEAK_COM_WEEK_TIME = NULL , WEAK_COM_MONTH_PAY = NULL , 
WEAK_COM_EMP_TIME = NULL , WEAK_CONTRACT_EMP_CNT = NULL , WEAK_CONTRACT_WEEK_TIME = NULL , 
WEAK_CONTRACT_MONTH_PAY = NULL , WEAK_CONTRACT_EMP_TIME = NULL , WEAK_TIME_EMP_CNT = NULL , 
WEAK_TIME_WEEK_TIME = NULL , WEAK_TIME_MONTH_PAY = NULL , WEAK_TIME_EMP_TIME = NULL , WEAK_SPE_EMP_CNT 
= NULL , WEAK_SPE_WEEK_TIME = NULL , WEAK_SPE_MONTH_PAY = NULL , WEAK_SPE_EMP_TIME = NULL , 
WEAK_AVG_YEAR = '4' , WEAK_TYPE1_CNT = NULL , WEAK_TYPE2_CNT = NULL , WEAK_TYPE3_CNT = NULL 
, WEAK_TYPE4_CNT = NULL , WEAK_TYPE5_CNT = NULL , WEAK_TYPE6_CNT = NULL , WEAK_TYPE7_CNT = 
NULL , FIRST_REASON = '6' , SECOND_REASON = '0' , ETC_REASON = NULL , CORP_ASSET = '30000000' 
, CORP_CAPITAL = '20000000' , CORP_DEBT = '1000000' , CORP_SALES = '30000000' , CORP_SALES_PROFIT 
= NULL , CORP_LABOR_COST = NULL , CORP_TAX = NULL , CORP_OP_PROFIT = NULL , CORP_NET_INCOM 
= NULL , GOV_SUP_ASSET = NULL , GOV_SUP_COST = NULL , SPONSOR_DONATE = NULL , FUNDS_REVENUE 
= NULL , FUNDS_DONATE = NULL , FUNDS_SUPP = NULL , FUNDS_LOAN = NULL , FUNDS_ETC = '100' , 
NETWORK_TARGET_YN = NULL , NETWORK_TARGET_COUNT = NULL , NETWORK_BUNIT_YN = NETWORK_BUNIT_YN 
= NULL , NETWORK_BUNIT_COUNT = NULL , NETWORK_GUNIT_YN = NULL , NETWORK_GUNIT_COUNT = NULL 
, NETWORK_TYPE_YN = NULL , NETWORK_TYPE_COUNT = NULL , NETWORK_ISSUE_YN = NULL , NETWORK_ISSUE_COUNT 
= NULL , YOUTH_COUNT = NULL , SALES_EMP_RATE = NULL , DEMO_DECISION_1 = NULL , DEMO_DECISION_2 
= NULL , DEMO_DECISION_3 = NULL , DEMO_DECISION_4 = NULL , SOCIAL_REINVEST_1 = NULL , SOCIAL_REINVEST_2 
= NULL , SOCIAL_REINVEST_3 = NULL , SOCIAL_REINVEST_4 = NULL , SOCIAL_REINVEST_5 = NULL , SOCIAL_SERVICE_WEAK 
= NULL , SOCIAL_SERVICE_GENERAL = NULL , PROFIT_SURPLUS = '80000000' , NON_OP_INCOM = NULL 
, MOD_ID = 'admin' , MOD_DT = now() WHERE CORP_SEQ = 239 

06-09 16:27:50.144 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
2. UPDATE CORP_INFO SET CORP_NM = '24시 플라워 협동조합' , OPEN_DT = '2014-01-01' , SE_YN = NULL , ORG_TYPE 
= '1' , BEFORE_TYPE = '3' , LEG_TYPE1 = NULL , LEG_TYPE2 = NULL , MAIN_TYPE = '1' , SECTOR 
= '3' , HISTORY = '1' , REGION = '6' , LIFE_CHG = '0' , LOCAL_SOL = '0' , CITY_ENL = NULL , 
WEAK_CHG = NULL , WEAK_ENL = NULL , PROD_NM1 = '화환' , PROD_NM2 = '관엽' , PROD_NM3 = NULL , PROD_NM1_PCT 
= '80' , PROD_NM2_PCT = '20' , PROD_NM3_PCT = NULL , PROD_ETC_PCT = NULL , SERVICE_NM1 = NULL 
, SERVICE_NM2 = NULL , SERVICE_NM3 = NULL , SERVICE_NM1_PCT = NULL , SERVICE_NM2_PCT = NULL 
, SERVICE_NM3_PCT = NULL , SERVICE_ETC_PCT = NULL , IN_TOT1 = NULL , IN_SEE1 = NULL , IN_TOT2 
= NULL , IN_SEE2 = NULL , IN_TOT3 = '100' , IN_SEE3 = '0' , OUT_TOT1 = NULL , OUT_SEE1 = NULL 
, OUT_TOT2 = '60' , OUT_SEE2 = NULL , OUT_TOT3 = '40' , OUT_SEE3 = '0' , SAILS_PCT1 = '40' 
, SAILS_PCT2 = '20' , SAILS_PCT3 = '20' , SAILS_PCT4 = NULL , SAILS_PCT5 = '20' , TOT_PAR = 
'6' , TOT_EMP = '6' , MALE_CNT = '3' , FMALE_CNT = '3' , REG_EMP_CNT = NULL , REG_WEEK_TIME 
= NULL , REG_MONTH_PAY = NULL , REG_EMP_TIME = NULL , COM_EMP_CNT = NULL , COM_WEEK_TIME = 
NULL , COM_MONTH_PAY = NULL , COM_EMP_TIME = NULL , CONTRACT_EMP_CNT = NULL , CONTRACT_WEEK_TIME 
= NULL , CONTRACT_MONTH_PAY = NULL , CONTRACT_EMP_TIME = NULL , TIME_EMP_CNT = '4' , TIME_WEEK_TIME 
= NULL , TIME_MONTH_PAY = NULL , TIME_EMP_TIME = NULL , SPE_EMP_CNT = NULL , SPE_WEEK_TIME 
= NULL , SPE_MONTH_PAY = NULL , SPE_EMP_TIME = NULL , VOL_EMP_CNT = NULL , VOL_WEEK_TIME = 
NULL , AVG_YEAR = NULL , WEAK_TOT_EMP = NULL , WEAK_MALE_CNT = NULL , WEAK_FMALE_CNT = NULL 
, WEAK_REG_EMP_CNT = NULL , WEAK_REG_WEEK_TIME = NULL , WEAK_REG_MONTH_PAY = NULL , WEAK_REG_EMP_TIME 
= NULL , WEAK_COM_EMP_CNT = NULL , WEAK_COM_WEEK_TIME = NULL , WEAK_COM_MONTH_PAY = NULL , 
WEAK_COM_EMP_TIME = NULL , WEAK_CONTRACT_EMP_CNT = NULL , WEAK_CONTRACT_WEEK_TIME = NULL , 
WEAK_CONTRACT_MONTH_PAY = NULL , WEAK_CONTRACT_EMP_TIME = NULL , WEAK_TIME_EMP_CNT = NULL , 
WEAK_TIME_WEEK_TIME = NULL , WEAK_TIME_MONTH_PAY = NULL , WEAK_TIME_EMP_TIME = NULL , WEAK_SPE_EMP_CNT 
= NULL , WEAK_SPE_WEEK_TIME = NULL , WEAK_SPE_MONTH_PAY = NULL , WEAK_SPE_EMP_TIME = NULL , 
WEAK_AVG_YEAR = '4' , WEAK_TYPE1_CNT = NULL , WEAK_TYPE2_CNT = NULL , WEAK_TYPE3_CNT = NULL 
, WEAK_TYPE4_CNT = NULL , WEAK_TYPE5_CNT = NULL , WEAK_TYPE6_CNT = NULL , WEAK_TYPE7_CNT = 
NULL , FIRST_REASON = '6' , SECOND_REASON = '0' , ETC_REASON = NULL , CORP_ASSET = '30000000' 
, CORP_CAPITAL = '20000000' , CORP_DEBT = '1000000' , CORP_SALES = '30000000' , CORP_SALES_PROFIT 
= NULL , CORP_LABOR_COST = NULL , CORP_TAX = NULL , CORP_OP_PROFIT = NULL , CORP_NET_INCOM 
= NULL , GOV_SUP_ASSET = NULL , GOV_SUP_COST = NULL , SPONSOR_DONATE = NULL , FUNDS_REVENUE 
= NULL , FUNDS_DONATE = NULL , FUNDS_SUPP = NULL , FUNDS_LOAN = NULL , FUNDS_ETC = '100' , 
NETWORK_TARGET_YN = NULL , NETWORK_TARGET_COUNT = NULL , NETWORK_BUNIT_YN = NETWORK_BUNIT_YN 
= NULL , NETWORK_BUNIT_COUNT = NULL , NETWORK_GUNIT_YN = NULL , NETWORK_GUNIT_COUNT = NULL 
, NETWORK_TYPE_YN = NULL , NETWORK_TYPE_COUNT = NULL , NETWORK_ISSUE_YN = NULL , NETWORK_ISSUE_COUNT 
= NULL , YOUTH_COUNT = NULL , SALES_EMP_RATE = NULL , DEMO_DECISION_1 = NULL , DEMO_DECISION_2 
= NULL , DEMO_DECISION_3 = NULL , DEMO_DECISION_4 = NULL , SOCIAL_REINVEST_1 = NULL , SOCIAL_REINVEST_2 
= NULL , SOCIAL_REINVEST_3 = NULL , SOCIAL_REINVEST_4 = NULL , SOCIAL_REINVEST_5 = NULL , SOCIAL_SERVICE_WEAK 
= NULL , SOCIAL_SERVICE_GENERAL = NULL , PROFIT_SURPLUS = '80000000' , NON_OP_INCOM = NULL 
, MOD_ID = 'admin' , MOD_DT = now() WHERE CORP_SEQ = 239 

06-09 16:28:09.597 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-09 16:28:09.600 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-11 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-09 16:28:09.679 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-09 16:28:09.681 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-11 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-09 16:28:09.683 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민581 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-09 16:28:09.765 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SE_YN' 

06-09 16:28:09.766 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:28:09.767 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'ORG_TYPE' 

06-09 16:28:09.767 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE1' 

06-09 16:28:09.768 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-09 16:28:09.774 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-09 16:28:09.775 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
5. SELECT 1 

06-09 16:28:09.781 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE2' 

06-09 16:28:09.784 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-09 16:28:09.794 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-09 16:28:09.795 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-09 16:28:09.795 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-09 16:28:09.806 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-09 16:28:09.813 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-09 16:28:09.823 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_YN' 

06-09 16:28:09.830 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_COUNT' 

06-09 16:28:09.842 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SE_YN' 

06-09 16:28:09.845 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'ORG_TYPE' 

06-09 16:28:09.851 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-09 16:28:09.857 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE1' 

06-09 16:28:09.865 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE2' 

06-09 16:28:09.868 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-09 16:28:09.880 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-09 16:28:09.889 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-09 16:28:09.897 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
5. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-09 16:28:09.898 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-09 16:28:09.906 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-09 16:28:09.913 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_YN' 

06-09 16:28:09.919 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_COUNT' 

06-09 16:40:33.384 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:40:33.386 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 16:40:35.533 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:40:38.327 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:40:38.329 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 16:41:24.596 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:41:24.597 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:41:27.241 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 16:46:29.525 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:46:29.527 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 16:46:31.043 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:50:04.794 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:50:04.796 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 16:50:08.187 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:50:08.189 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-09 16:50:08.856 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:50:10.426 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 16:50:34.311 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:50:34.314 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 16:50:36.303 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:50:42.275 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:50:42.277 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:50:42.786 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:54:44.012 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:54:44.013 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 16:54:44.016 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 16:54:44.017 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 16:54:44.872 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 16:54:50.573 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 16:54:50.576 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 16:54:51.290 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 17:09:47.271 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 17:09:47.274 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 17:09:50.373 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-09 17:09:50.376 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 17:15:00.123 [         snp.SocialApplication][INFO ] Starting SocialApplication on DESKTOP-0J1RTFF with PID 6512 (started by anseungbae in E:\프로젝트폴더\사회기업\social\social)
06-09 17:15:00.126 [         snp.SocialApplication][INFO ] The following profiles are active: development
06-09 17:15:00.202 [gEmbeddedWebApplicationContext][INFO ] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Fri Jun 09 17:15:00 KST 2017]; root of context hierarchy
06-09 17:15:00.550 [   o.h.v.internal.util.Version][INFO ] HV000001: Hibernate Validator 5.2.4.Final
06-09 17:15:02.948 [egate$BeanPostProcessorChecker][INFO ] Bean 'aopConfig' of type [class snp.config.AopConfig$$EnhancerBySpringCGLIB$$cd3a42b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:03.196 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$1d44bbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:03.293 [nnotationActionEndpointMapping][INFO ] Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-09 17:15:03.368 [egate$BeanPostProcessorChecker][INFO ] Bean 'mybatisConfig' of type [class snp.config.MybatisConfig$$EnhancerBySpringCGLIB$$a944b465] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:03.886 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSource_default' of type [class org.apache.tomcat.jdbc.pool.DataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:03.893 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3f302a1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:03.947 [egate$BeanPostProcessorChecker][INFO ] Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:03.978 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSourceInitializer' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.020 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionManager' of type [class org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.039 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionConfig' of type [class snp.config.TransactionConfig$$EnhancerBySpringCGLIB$$56b9910] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.065 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdvice' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.090 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdviceAdvisor' of type [class org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.143 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [class org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f5ea4ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.510 [egate$BeanPostProcessorChecker][INFO ] Bean 'objectPostProcessor' of type [class org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.523 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@b18c4' of type [class org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.571 [egate$BeanPostProcessorChecker][INFO ] Bean 'enableGlobalAuthenticationAutowiredConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.589 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeUserDetailsBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.596 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeAuthenticationProviderBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:04.605 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration' of type [class org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration$$EnhancerBySpringCGLIB$$5c908428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:05.204 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityProperties' of type [class org.springframework.boot.autoconfigure.security.SecurityProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:05.223 [egate$BeanPostProcessorChecker][INFO ] Bean 'springBootAuthenticationConfigurerAdapter' of type [class org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration$SpringBootAuthenticationConfigurerAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:05.236 [egate$BeanPostProcessorChecker][INFO ] Bean 'bootGlobalAuthenticationConfigurationAdapter' of type [class org.springframework.boot.autoconfigure.security.BootGlobalAuthenticationConfiguration$BootGlobalAuthenticationConfigurationAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:05.249 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$41b3596d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:05.276 [egate$BeanPostProcessorChecker][INFO ] Bean 'authenticationManagerBuilder' of type [class org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:05.965 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionFactory_default' of type [class snp.spring.mybatis.ProxySqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:05.986 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionTemplate_default' of type [class org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:05.991 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:05.995 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:06.007 [egate$BeanPostProcessorChecker][INFO ] Bean '__before_repo_method__' of type [class snp.config.AopConfig$$Lambda$9/1906029492] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:06.016 [egate$BeanPostProcessorChecker][INFO ] Bean '__after_repo_method__' of type [class snp.config.AopConfig$$Lambda$10/1807634633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:06.016 [egate$BeanPostProcessorChecker][INFO ] Bean 'userAuthenticationProvider' of type [class snp.infra.security.component.UserAuthenticationProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:06.018 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityConfig.MethodSecurityConfigurer' of type [class snp.config.SecurityConfig$MethodSecurityConfigurer$$EnhancerBySpringCGLIB$$c0dc54bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:06.051 [egate$BeanPostProcessorChecker][INFO ] Bean 'methodSecurityMetadataSource' of type [class org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:06.065 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d3c86be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-09 17:15:06.515 [TomcatEmbeddedServletContainer][INFO ] Tomcat initialized with port(s): 8001 (http)
06-09 17:15:06.533 [    o.a.c.core.StandardService][INFO ] Starting service Tomcat
06-09 17:15:06.534 [     o.a.c.core.StandardEngine][INFO ] Starting Servlet Engine: Apache Tomcat/8.5.6
06-09 17:15:06.897 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring embedded WebApplicationContext
06-09 17:15:06.898 [ o.s.web.context.ContextLoader][INFO ] Root WebApplicationContext: initialization completed in 6696 ms
06-09 17:15:07.138 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
06-09 17:15:07.138 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
06-09 17:15:07.139 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
06-09 17:15:07.139 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'requestContextFilter' to: [/*]
06-09 17:15:07.142 [ingFilterProxyRegistrationBean][INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
06-09 17:15:07.143 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'dispatcherServlet' to [/]
06-09 17:15:07.148 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'messageDispatcherServlet' to [/services/*]
06-09 17:15:08.703 [s.w.DefaultSecurityFilterChain][INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71f1cc02, org.springframework.security.web.context.SecurityContextPersistenceFilter@36aa52d2, org.springframework.security.web.header.HeaderWriterFilter@7426a448, org.springframework.security.web.authentication.logout.LogoutFilter@2629d5dc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3c91530d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ceecfee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f1f7db2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f14761c, org.springframework.security.web.session.SessionManagementFilter@6cbe7d4d, org.springframework.security.web.access.ExceptionTranslationFilter@56b859a6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3119cf6f]
06-09 17:15:09.007 [a.RequestMappingHandlerAdapter][INFO ] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Fri Jun 09 17:15:00 KST 2017]; root of context hierarchy
06-09 17:15:09.153 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus/{parentMenu}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findMenusByParent(java.lang.String)
06-09 17:15:09.157 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[POST]}" onto public int snp.app.common.CommonController.saveMenus(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-09 17:15:09.159 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteRole(java.lang.String)
06-09 17:15:09.161 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoleMenus(java.lang.String)
06-09 17:15:09.163 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/{grpCd}/code],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findCodes(java.lang.String)
06-09 17:15:09.165 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findAllMenus()
06-09 17:15:09.168 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateRole(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-09 17:15:09.170 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateMenu(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-09 17:15:09.172 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteMenu(java.lang.String)
06-09 17:15:09.174 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu],methods=[PUT]}" onto public int snp.app.common.CommonController.insertMenu(java.util.Map<java.lang.String, java.lang.Object>)
06-09 17:15:09.176 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/roles],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoles()
06-09 17:15:09.177 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role],methods=[PUT]}" onto public int snp.app.common.CommonController.insertRole(java.util.Map<java.lang.String, java.lang.Object>)
06-09 17:15:09.184 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[DELETE]}" onto public int snp.app.common.UserController.deleteUser(java.lang.Integer)
06-09 17:15:09.186 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[GET]}" onto public snp.infra.user.model.User snp.app.common.UserController.getLoggedInUser()
06-09 17:15:09.188 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find/{page}/{keyword}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.Integer,java.lang.String)
06-09 17:15:09.191 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.String)
06-09 17:15:09.192 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.common.UserController.findUsers(java.lang.Integer)
06-09 17:15:09.194 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[POST || PUT]}" onto public int snp.app.common.UserController.saveUser(java.util.Map<java.lang.String, java.lang.Object>)
06-09 17:15:09.219 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level2],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailGrade(java.lang.String)
06-09 17:15:09.221 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/cooperationkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findCooperationKpi(int,int)
06-09 17:15:09.221 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics-corp/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.findCorpAvg2Excel(javax.servlet.http.HttpServletResponse,int) throws java.lang.Exception
06-09 17:15:09.224 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpidetail/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailRate(java.lang.String)
06-09 17:15:09.227 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/socialkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findSocialKpi(int,int)
06-09 17:15:09.229 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorpsKeyword(java.lang.String)
06-09 17:15:09.232 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionRate(java.lang.String)
06-09 17:15:09.234 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeGrade()
06-09 17:15:09.237 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllGrade()
06-09 17:15:09.239 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all-corps/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.allCorps2Excel(javax.servlet.http.HttpServletResponse,int,java.lang.String) throws java.lang.Exception
06-09 17:15:09.240 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/villagekpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findVillageKpi(int,int)
06-09 17:15:09.241 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionGrade(java.lang.String)
06-09 17:15:09.242 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorGrade(java.lang.String)
06-09 17:15:09.242 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorRate(java.lang.String)
06-09 17:15:09.242 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeRate(java.lang.String)
06-09 17:15:09.243 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/savekpi],methods=[POST]}" onto public int snp.app.corp.CorpController.saveKpi(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-09 17:15:09.243 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/grade],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeGrade(java.lang.String)
06-09 17:15:09.244 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorpKeyword(java.lang.String)
06-09 17:15:09.244 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiRate(java.lang.String)
06-09 17:15:09.244 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllRate()
06-09 17:15:09.245 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level1],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiGrade(java.lang.String)
06-09 17:15:09.245 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeRate()
06-09 17:15:09.245 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/corp],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorp(java.lang.String)
06-09 17:15:09.246 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/corps],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorps(java.lang.String)
06-09 17:15:09.257 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteVillageInfo(java.lang.Integer)
06-09 17:15:09.257 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteCooperationInfo(java.lang.Integer)
06-09 17:15:09.258 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCooperationInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-09 17:15:09.258 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpListKeyword(java.lang.String,java.lang.String)
06-09 17:15:09.258 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCooperationList()
06-09 17:15:09.258 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCooperationnfo(java.lang.Integer)
06-09 17:15:09.259 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveSocialInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-09 17:15:09.259 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveVillageInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-09 17:15:09.259 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCenterMgm()
06-09 17:15:09.259 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/{corpType}/type],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpList(java.lang.String)
06-09 17:15:09.259 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findSocialList()
06-09 17:15:09.260 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(int,int)
06-09 17:15:09.261 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(java.lang.Integer)
06-09 17:15:09.262 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findSocialInfo(java.lang.Integer)
06-09 17:15:09.275 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[POST]}" onto public int snp.app.hq.HqController.saveCenterMgm(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-09 17:15:09.276 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findVillageList()
06-09 17:15:09.277 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCorpInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-09 17:15:09.279 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteSocialInfo(java.lang.Integer)
06-09 17:15:09.282 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findVillageInfo(java.lang.Integer)
06-09 17:15:09.295 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/user],methods=[GET]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.authenticatedUser()
06-09 17:15:09.299 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth],methods=[GET],params=[userId]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.forceAuthenticate(java.lang.String,javax.servlet.http.HttpServletRequest)
06-09 17:15:09.305 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/login],methods=[POST],params=[userId && password]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws org.springframework.security.core.AuthenticationException
06-09 17:15:09.307 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/ || /index || /app/* || /app/*/* || /app/*/*/*]}" onto public java.lang.String snp.infra.security.IndexController.index()
06-09 17:15:09.315 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
06-09 17:15:09.318 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
06-09 17:15:09.504 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/deps/bower/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-09 17:15:09.504 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-09 17:15:09.505 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-09 17:15:09.672 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-09 17:15:10.394 [.j.e.a.AnnotationMBeanExporter][INFO ] Registering beans for JMX exposure on startup
06-09 17:15:10.416 [o.a.c.http11.Http11NioProtocol][INFO ] Initializing ProtocolHandler ["http-nio-8001"]
06-09 17:15:10.432 [o.a.c.http11.Http11NioProtocol][INFO ] Starting ProtocolHandler [http-nio-8001]
06-09 17:15:10.483 [o.a.t.util.net.NioSelectorPool][INFO ] Using a shared selector for servlet write/read
06-09 17:15:10.522 [TomcatEmbeddedServletContainer][INFO ] Tomcat started on port(s): 8001 (http)
06-09 17:15:10.527 [         snp.SocialApplication][INFO ] Started SocialApplication in 10.972 seconds (JVM running for 11.739)
06-09 17:15:16.328 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
06-09 17:15:16.328 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization started
06-09 17:15:16.369 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
06-09 17:15:17.236 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-09 17:15:17.250 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-09 17:15:17.253 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-09 17:15:18.441 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 17:15:22.080 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-09 17:15:22.083 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 17:15:24.189 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-09 17:21:21.222 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-09 17:21:21.224 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-09 17:21:22.995 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

