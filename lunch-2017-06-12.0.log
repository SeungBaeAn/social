06-12 10:17:24.131 [         snp.SocialApplication][INFO ] Starting SocialApplication on DESKTOP-0J1RTFF with PID 17460 (started by anseungbae in E:\프로젝트폴더\사회기업\social\social)
06-12 10:17:24.135 [         snp.SocialApplication][INFO ] The following profiles are active: development
06-12 10:17:24.248 [gEmbeddedWebApplicationContext][INFO ] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Mon Jun 12 10:17:24 KST 2017]; root of context hierarchy
06-12 10:17:24.536 [   o.h.v.internal.util.Version][INFO ] HV000001: Hibernate Validator 5.2.4.Final
06-12 10:17:26.392 [egate$BeanPostProcessorChecker][INFO ] Bean 'aopConfig' of type [class snp.config.AopConfig$$EnhancerBySpringCGLIB$$cd3a42b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:26.475 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$1d44bbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:26.531 [nnotationActionEndpointMapping][INFO ] Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-12 10:17:26.588 [egate$BeanPostProcessorChecker][INFO ] Bean 'mybatisConfig' of type [class snp.config.MybatisConfig$$EnhancerBySpringCGLIB$$a944b465] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:26.857 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSource_default' of type [class org.apache.tomcat.jdbc.pool.DataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:26.878 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3f302a1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:26.992 [egate$BeanPostProcessorChecker][INFO ] Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:26.998 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSourceInitializer' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.015 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionManager' of type [class org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.022 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionConfig' of type [class snp.config.TransactionConfig$$EnhancerBySpringCGLIB$$56b9910] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.047 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdvice' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.055 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdviceAdvisor' of type [class org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.076 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [class org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f5ea4ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.430 [egate$BeanPostProcessorChecker][INFO ] Bean 'objectPostProcessor' of type [class org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.441 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@b18c4' of type [class org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.491 [egate$BeanPostProcessorChecker][INFO ] Bean 'enableGlobalAuthenticationAutowiredConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.541 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeUserDetailsBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.555 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeAuthenticationProviderBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.566 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration' of type [class org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration$$EnhancerBySpringCGLIB$$5c908428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.782 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityProperties' of type [class org.springframework.boot.autoconfigure.security.SecurityProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.795 [egate$BeanPostProcessorChecker][INFO ] Bean 'springBootAuthenticationConfigurerAdapter' of type [class org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration$SpringBootAuthenticationConfigurerAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.804 [egate$BeanPostProcessorChecker][INFO ] Bean 'bootGlobalAuthenticationConfigurationAdapter' of type [class org.springframework.boot.autoconfigure.security.BootGlobalAuthenticationConfiguration$BootGlobalAuthenticationConfigurationAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.807 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$41b3596d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:27.828 [egate$BeanPostProcessorChecker][INFO ] Bean 'authenticationManagerBuilder' of type [class org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.648 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionFactory_default' of type [class snp.spring.mybatis.ProxySqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.665 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionTemplate_default' of type [class org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.670 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.676 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.717 [egate$BeanPostProcessorChecker][INFO ] Bean '__before_repo_method__' of type [class snp.config.AopConfig$$Lambda$9/1906029492] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.731 [egate$BeanPostProcessorChecker][INFO ] Bean '__after_repo_method__' of type [class snp.config.AopConfig$$Lambda$10/1807634633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.732 [egate$BeanPostProcessorChecker][INFO ] Bean 'userAuthenticationProvider' of type [class snp.infra.security.component.UserAuthenticationProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.736 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityConfig.MethodSecurityConfigurer' of type [class snp.config.SecurityConfig$MethodSecurityConfigurer$$EnhancerBySpringCGLIB$$c0dc54bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.756 [egate$BeanPostProcessorChecker][INFO ] Bean 'methodSecurityMetadataSource' of type [class org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:28.797 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d3c86be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 10:17:29.593 [TomcatEmbeddedServletContainer][INFO ] Tomcat initialized with port(s): 8001 (http)
06-12 10:17:29.621 [    o.a.c.core.StandardService][INFO ] Starting service Tomcat
06-12 10:17:29.623 [     o.a.c.core.StandardEngine][INFO ] Starting Servlet Engine: Apache Tomcat/8.5.6
06-12 10:17:30.025 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring embedded WebApplicationContext
06-12 10:17:30.025 [ o.s.web.context.ContextLoader][INFO ] Root WebApplicationContext: initialization completed in 5777 ms
06-12 10:17:30.869 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
06-12 10:17:30.870 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
06-12 10:17:30.872 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
06-12 10:17:30.873 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'requestContextFilter' to: [/*]
06-12 10:17:30.876 [ingFilterProxyRegistrationBean][INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
06-12 10:17:30.878 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'dispatcherServlet' to [/]
06-12 10:17:30.880 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'messageDispatcherServlet' to [/services/*]
06-12 10:17:32.604 [s.w.DefaultSecurityFilterChain][INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c91530d, org.springframework.security.web.context.SecurityContextPersistenceFilter@42aae04d, org.springframework.security.web.header.HeaderWriterFilter@135a8c6f, org.springframework.security.web.authentication.logout.LogoutFilter@28ee7bee, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@149b0577, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3679d92e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ba17be6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d70638, org.springframework.security.web.session.SessionManagementFilter@3d19d85, org.springframework.security.web.access.ExceptionTranslationFilter@59fbb34, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1fc713c9]
06-12 10:17:32.779 [a.RequestMappingHandlerAdapter][INFO ] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Mon Jun 12 10:17:24 KST 2017]; root of context hierarchy
06-12 10:17:32.876 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus/{parentMenu}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findMenusByParent(java.lang.String)
06-12 10:17:32.878 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/roles],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoles()
06-12 10:17:32.878 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/{grpCd}/code],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findCodes(java.lang.String)
06-12 10:17:32.879 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateMenu(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-12 10:17:32.881 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu],methods=[PUT]}" onto public int snp.app.common.CommonController.insertMenu(java.util.Map<java.lang.String, java.lang.Object>)
06-12 10:17:32.882 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoleMenus(java.lang.String)
06-12 10:17:32.883 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role],methods=[PUT]}" onto public int snp.app.common.CommonController.insertRole(java.util.Map<java.lang.String, java.lang.Object>)
06-12 10:17:32.890 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateRole(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-12 10:17:32.891 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteRole(java.lang.String)
06-12 10:17:32.891 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[POST]}" onto public int snp.app.common.CommonController.saveMenus(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-12 10:17:32.892 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findAllMenus()
06-12 10:17:32.894 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteMenu(java.lang.String)
06-12 10:17:32.899 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[POST || PUT]}" onto public int snp.app.common.UserController.saveUser(java.util.Map<java.lang.String, java.lang.Object>)
06-12 10:17:32.900 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[DELETE]}" onto public int snp.app.common.UserController.deleteUser(java.lang.Integer)
06-12 10:17:32.902 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[GET]}" onto public snp.infra.user.model.User snp.app.common.UserController.getLoggedInUser()
06-12 10:17:33.013 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find/{page}/{keyword}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.Integer,java.lang.String)
06-12 10:17:33.014 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.common.UserController.findUsers(java.lang.Integer)
06-12 10:17:33.015 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.String)
06-12 10:17:33.053 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/cooperationkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findCooperationKpi(int,int)
06-12 10:17:33.054 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level2],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailGrade(java.lang.String)
06-12 10:17:33.055 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpidetail/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailRate(java.lang.String)
06-12 10:17:33.056 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics-corp/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.findCorpAvg2Excel(javax.servlet.http.HttpServletResponse,int) throws java.lang.Exception
06-12 10:17:33.057 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorRate(java.lang.String)
06-12 10:17:33.059 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/socialkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findSocialKpi(int,int)
06-12 10:17:33.060 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/savekpi],methods=[POST]}" onto public int snp.app.corp.CorpController.saveKpi(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-12 10:17:33.060 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/grade],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeGrade(java.lang.String)
06-12 10:17:33.061 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionGrade(java.lang.String)
06-12 10:17:33.061 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionRate(java.lang.String)
06-12 10:17:33.062 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorGrade(java.lang.String)
06-12 10:17:33.062 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/corp],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorp(java.lang.String)
06-12 10:17:33.063 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level1],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiGrade(java.lang.String)
06-12 10:17:33.063 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorpsKeyword(java.lang.String)
06-12 10:17:33.064 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeGrade()
06-12 10:17:33.064 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeRate()
06-12 10:17:33.065 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllGrade()
06-12 10:17:33.066 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorpKeyword(java.lang.String)
06-12 10:17:33.068 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all-corps/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.allCorps2Excel(javax.servlet.http.HttpServletResponse,int,java.lang.String) throws java.lang.Exception
06-12 10:17:33.079 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllRate()
06-12 10:17:33.080 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/villagekpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findVillageKpi(int,int)
06-12 10:17:33.081 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeRate(java.lang.String)
06-12 10:17:33.081 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiRate(java.lang.String)
06-12 10:17:33.082 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/corps],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorps(java.lang.String)
06-12 10:17:33.097 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpListKeyword(java.lang.String,java.lang.String)
06-12 10:17:33.099 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCooperationnfo(java.lang.Integer)
06-12 10:17:33.101 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCooperationList()
06-12 10:17:33.102 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCooperationInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-12 10:17:33.109 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteCooperationInfo(java.lang.Integer)
06-12 10:17:33.110 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteVillageInfo(java.lang.Integer)
06-12 10:17:33.110 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/{corpType}/type],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpList(java.lang.String)
06-12 10:17:33.110 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(int,int)
06-12 10:17:33.111 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(java.lang.Integer)
06-12 10:17:33.112 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCorpInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-12 10:17:33.113 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findSocialList()
06-12 10:17:33.114 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveSocialInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-12 10:17:33.118 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteSocialInfo(java.lang.Integer)
06-12 10:17:33.119 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findVillageList()
06-12 10:17:33.123 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findSocialInfo(java.lang.Integer)
06-12 10:17:33.124 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findVillageInfo(java.lang.Integer)
06-12 10:17:33.125 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveVillageInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-12 10:17:33.125 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCenterMgm()
06-12 10:17:33.126 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[POST]}" onto public int snp.app.hq.HqController.saveCenterMgm(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-12 10:17:33.247 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth],methods=[GET],params=[userId]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.forceAuthenticate(java.lang.String,javax.servlet.http.HttpServletRequest)
06-12 10:17:33.251 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/user],methods=[GET]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.authenticatedUser()
06-12 10:17:33.280 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/login],methods=[POST],params=[userId && password]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws org.springframework.security.core.AuthenticationException
06-12 10:17:33.282 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/ || /index || /app/* || /app/*/* || /app/*/*/*]}" onto public java.lang.String snp.infra.security.IndexController.index()
06-12 10:17:33.499 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
06-12 10:17:33.503 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
06-12 10:17:33.770 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/deps/bower/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-12 10:17:33.771 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-12 10:17:33.771 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-12 10:17:33.877 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-12 10:17:35.078 [.j.e.a.AnnotationMBeanExporter][INFO ] Registering beans for JMX exposure on startup
06-12 10:17:35.129 [o.a.c.http11.Http11NioProtocol][INFO ] Initializing ProtocolHandler ["http-nio-8001"]
06-12 10:17:35.160 [o.a.c.http11.Http11NioProtocol][INFO ] Starting ProtocolHandler [http-nio-8001]
06-12 10:17:35.212 [o.a.t.util.net.NioSelectorPool][INFO ] Using a shared selector for servlet write/read
06-12 10:17:35.255 [TomcatEmbeddedServletContainer][INFO ] Tomcat started on port(s): 8001 (http)
06-12 10:17:35.264 [         snp.SocialApplication][INFO ] Started SocialApplication in 11.58 seconds (JVM running for 12.179)
06-12 10:17:36.350 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
06-12 10:17:36.351 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization started
06-12 10:17:36.386 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
06-12 10:17:37.557 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-12 10:17:37.573 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-12 10:17:37.578 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-12 10:17:39.352 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:17:44.547 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:17:44.550 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:24:10.894 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:24:10.897 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:24:13.693 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 10:24:21.987 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:24:21.993 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:24:25.582 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:24:25.584 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:24:27.650 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:25:03.670 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:25:03.672 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:25:05.990 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:25:07.469 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:25:07.471 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:25:12.109 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:25:12.114 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:27:17.489 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:27:17.493 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:28:01.061 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:28:01.063 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:34:59.649 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:34:59.653 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:35:34.398 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:35:34.401 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:36:42.292 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:36:42.295 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:50:39.015 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:50:39.017 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-12 10:50:39.021 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-12 10:50:39.023 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-12 10:50:39.615 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:50:43.737 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:50:43.742 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:50:50.713 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:50:50.715 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 10:51:04.793 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 10:51:04.796 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 11:38:09.821 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@6faa3d44: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@ffff4c9c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: 476FBAE9AC5B20E003736E499D354362; Granted Authorities: ROLE_ANONYMOUS)
06-12 11:38:11.678 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@6faa3d44: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@ffff4c9c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: 476FBAE9AC5B20E003736E499D354362; Granted Authorities: ROLE_ANONYMOUS)
06-12 11:38:25.073 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 11:38:25.078 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-12 11:38:25.083 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-12 11:38:25.085 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-12 11:38:25.669 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 11:38:27.388 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 11:38:55.742 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 11:38:55.744 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 11:39:17.177 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 11:39:17.180 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 11:39:17.464 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-11 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 11:39:17.568 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 11:39:17.569 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-11 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 11:39:17.577 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민521 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 11:39:17.672 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-12 11:39:17.681 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 11:39:17.688 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-12 11:39:17.697 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 11:39:17.701 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE1' 

06-12 11:39:17.702 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 11:39:17.707 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE2' 

06-12 11:39:17.712 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SE_YN' 

06-12 11:39:17.714 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'ORG_TYPE' 

06-12 11:39:17.722 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-12 11:39:17.722 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-12 11:39:17.732 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_YN' 

06-12 11:39:17.734 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_COUNT' 

06-12 11:39:17.738 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SE_YN' 

06-12 11:39:17.742 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'ORG_TYPE' 

06-12 11:39:17.746 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-12 11:39:17.748 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE1' 

06-12 11:39:17.754 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LEG_TYPE2' 

06-12 11:39:17.756 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 11:39:17.759 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 11:39:17.766 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 11:39:17.765 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-12 11:39:17.767 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 11:39:17.769 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 11:39:17.769 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-12 11:39:17.772 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-12 11:39:17.778 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_YN' 

06-12 11:39:17.781 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'NETWORK_COUNT' 

06-12 11:39:27.245 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 11:39:27.306 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CORP_NM /*기업명*/ , CORP_TYPE , CASE CORP_TYPE WHEN 1 THEN '사회적기업' WHEN 2 THEN '마을기업' 
ELSE '협동조합' END AS CORP_TYPE_NM , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME /*g6 정규직 주당평균 
근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ , COM_EMP_CNT 
+ CONTRACT_EMP_CNT + TIME_EMP_CNT AS NON_EMP_CNT /* 비정규직 근로자수 */ , COM_WEEK_TIME + CONTRACT_WEEK_TIME 
+ TIME_WEEK_TIME AS NON_WEEK_TIME /* 비정규직 주당 평균 근로기간 */ , COM_MONTH_PAY + CONTRACT_MONTH_PAY 
+ TIME_MONTH_PAY AS NON_MONTH_PAY /* 비정규직 월 평균임금 */ , COM_EMP_TIME + CONTRACT_EMP_TIME + TIME_EMP_TIME 
AS NON_EMP_TIME /* 비정규직 평균 근속기간 */ , VOL_EMP_CNT /*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 
자원봉사자 주당평균 근로시간 */ , WEAK_REG_EMP_CNT /*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 
근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , 
WEAK_COM_EMP_CNT + WEAK_CONTRACT_EMP_CNT + WEAK_TIME_EMP_CNT AS WEAK_NON_EMP_CNT /* 비정규직 근로자수 
*/ , WEAK_COM_WEEK_TIME + WEAK_CONTRACT_WEEK_TIME + WEAK_TIME_WEEK_TIME AS WEAK_NON_WEEK_TIME 
/* 비정규직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY + WEAK_CONTRACT_MONTH_PAY + WEAK_TIME_MONTH_PAY AS 
WEAK_NON_MONTH_PAY /* 비정규직 월 평균임금 */ , WEAK_COM_EMP_TIME + WEAK_CONTRACT_EMP_TIME + WEAK_TIME_EMP_TIME 
AS WEAK_NON_EMP_TIME /* 비정규직 평균 근속기간 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , CORP_ASSET /*h3 자산 */ , CORP_CAPITAL /*h4 자본 */ 
, CORP_DEBT /*h5 부채 */ , PROFIT_SURPLUS /*이익잉여금*/ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , NON_OP_INCOM /* 영업외이익 */ , GOV_SUP_ASSET /*h12 정부지원금 
- 건물 등 자산취득 관련 지원금 */ , GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 
각종 후원금, 기부금 */ FROM CORP_INFO ORDER BY CORP_NM 

06-12 11:39:41.230 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 11:39:41.233 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT 0 AS STATUS, ROUND(AVG(result),1) AS RESULT FROM kpi_result WHERE ( ( CORP_TYPE = 1 
AND KPI_CD in ( SELECT KPI_CD FROM SOCIAL_KPI WHERE IS_GRADE = 'Y' ) ) OR ( CORP_TYPE = 2 AND 
KPI_CD in ( SELECT KPI_CD FROM VILLAGE_KPI WHERE IS_GRADE = 'Y' ) ) OR ( CORP_TYPE = 3 AND 
KPI_CD in ( SELECT KPI_CD FROM COOPERATION_KPI WHERE IS_GRADE = 'Y' ) ) ) AND (KPI_CD like 
'0101%' OR KPI_CD like '0102%') AND ( RESULT >= 1 AND 7 >= RESULT ) UNION ALL SELECT 1 AS STATUS, 
ROUND(AVG(result),1) AS RESULT FROM kpi_result WHERE ( ( CORP_TYPE = 1 AND KPI_CD in ( SELECT 
KPI_CD FROM SOCIAL_KPI WHERE IS_GRADE = 'Y' ) ) OR ( CORP_TYPE = 2 AND KPI_CD in ( SELECT KPI_CD 
FROM VILLAGE_KPI WHERE IS_GRADE = 'Y' ) ) OR ( CORP_TYPE = 3 AND KPI_CD in ( SELECT KPI_CD 
FROM COOPERATION_KPI WHERE IS_GRADE = 'Y' ) ) ) AND KPI_CD like '0103%' AND ( RESULT >= 1 AND 
7 >= RESULT ) UNION ALL SELECT 2 AS STATUS, ROUND(AVG(result),1) AS RESULT FROM kpi_result 
WHERE ( ( CORP_TYPE = 1 AND KPI_CD in ( SELECT KPI_CD FROM SOCIAL_KPI WHERE IS_GRADE = 'Y' 
) ) OR ( CORP_TYPE = 2 AND KPI_CD in ( SELECT KPI_CD FROM VILLAGE_KPI WHERE IS_GRADE = 'Y' 
) ) OR ( CORP_TYPE = 3 AND KPI_CD in ( SELECT KPI_CD FROM COOPERATION_KPI WHERE IS_GRADE = 
'Y' ) ) ) AND KPI_CD like '02%' AND ( RESULT >= 1 AND 7 >= RESULT ) UNION ALL SELECT 3 AS STATUS, 
ROUND(AVG(result),1) AS RESULT FROM kpi_result WHERE ( ( CORP_TYPE = 1 AND KPI_CD in ( SELECT 
KPI_CD FROM SOCIAL_KPI WHERE IS_GRADE = 'Y' ) ) OR ( CORP_TYPE = 2 AND KPI_CD in ( SELECT KPI_CD 
FROM VILLAGE_KPI WHERE IS_GRADE = 'Y' ) ) OR ( CORP_TYPE = 3 AND KPI_CD in ( SELECT KPI_CD 
FROM COOPERATION_KPI WHERE IS_GRADE = 'Y' ) ) ) AND KPI_CD like '03%' AND ( RESULT >= 1 AND 
7 >= RESULT ) UNION ALL SELECT 4 AS STATUS, ROUND(AVG(result),1) AS RESULT FROM kpi_result 
WHERE ( ( CORP_TYPE = 1 AND KPI_CD in ( SELECT KPI_CD FROM SOCIAL_KPI WHERE IS_GRADE = 'Y' 
) ) OR ( CORP_TYPE = 2 AND KPI_CD in ( SELECT KPI_CD FROM VILLAGE_KPI WHERE IS_GRADE = 'Y' 
) ) OR ( CORP_TYPE = 3 AND KPI_CD in ( SELECT KPI_CD FROM COOPERATION_KPI WHERE IS_GRADE = 
'Y' ) ) ) AND KPI_CD like '04%' AND ( RESULT >= 1 AND 7 >= RESULT ) 

06-12 12:12:02.774 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-12 12:12:08.832 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:12:08.842 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-12 12:12:08.850 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-12 12:12:08.853 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-12 12:12:09.592 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:12:11.064 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:13:57.921 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:13:57.924 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 12:14:02.968 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:14:02.972 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 12:14:03.667 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:16:47.203 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:16:47.206 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:16:51.468 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:16:51.471 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:35:32.032 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:35:32.035 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:35:58.056 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:35:58.058 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:36:00.333 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:37:13.368 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:37:13.371 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:37:14.698 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:37:16.094 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 12:38:21.896 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:38:21.900 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:38:24.185 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:38:25.153 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:38:25.155 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:38:26.037 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:38:27.057 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:38:28.031 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:39:46.869 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:39:46.871 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:39:48.172 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:45:40.594 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:45:40.598 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:46:15.182 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:46:15.184 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:46:35.048 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:46:35.050 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:48:16.170 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:48:16.173 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:49:41.804 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:49:41.807 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:50:29.013 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:50:29.015 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:51:26.734 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:51:26.738 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:52:09.964 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:52:09.966 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:52:13.581 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:52:13.582 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:53:27.161 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:53:27.163 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:53:28.559 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:53:29.607 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:53:30.632 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:53:30.634 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:53:31.883 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:53:45.256 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:53:45.258 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:53:55.267 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:53:55.270 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:53:56.341 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:53:57.478 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:08.671 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:54:08.673 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:09.738 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:30.723 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:54:30.724 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:32.182 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:41.258 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:54:41.261 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:42.433 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:43.444 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:44.945 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:54:44.948 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:45.930 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:47.554 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:54:48.102 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:54:48.104 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 12:56:52.209 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:56:52.211 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:56:53.680 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:56:54.732 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:56:55.877 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:56:55.879 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:57:21.973 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:57:21.975 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:57:23.041 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:57:24.066 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:57:25.025 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:57:25.027 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:57:25.980 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:57:26.674 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:57:27.558 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:57:28.527 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 12:57:28.529 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 12:57:29.437 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:01:54.040 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:01:54.042 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:02:09.221 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:02:09.224 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:03:04.205 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:03:04.207 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:03:26.887 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:03:26.891 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 13:04:31.637 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:04:31.640 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:04:34.897 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:04:34.900 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:04:36.254 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:04:37.492 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:05:38.941 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:05:38.943 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:06:03.887 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:06:03.889 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:08:00.799 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:08:00.801 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:09:49.834 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:09:49.837 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:12:11.815 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:12:11.819 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:13:04.764 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:13:04.766 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:15:01.551 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:15:01.553 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:15:02.588 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:18:18.281 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:18:18.284 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 13:19:41.425 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:19:41.427 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:19:56.609 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:19:56.611 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:20:43.541 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:20:43.543 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:21:07.373 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:21:07.376 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:23:42.818 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:23:42.820 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:24:03.419 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:24:03.421 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:24:15.455 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:24:15.458 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:24:26.492 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:24:26.493 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:25:32.208 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:25:32.210 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:25:35.073 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:25:43.643 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:25:43.645 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:25:44.672 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:27:06.027 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:27:06.029 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:28:09.052 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:28:09.054 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:58:03.211 [         snp.SocialApplication][INFO ] Starting SocialApplication on DESKTOP-0J1RTFF with PID 12624 (started by anseungbae in E:\프로젝트폴더\사회기업\social\social)
06-12 13:58:03.217 [         snp.SocialApplication][INFO ] The following profiles are active: development
06-12 13:58:03.305 [gEmbeddedWebApplicationContext][INFO ] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Mon Jun 12 13:58:03 KST 2017]; root of context hierarchy
06-12 13:58:03.516 [   o.h.v.internal.util.Version][INFO ] HV000001: Hibernate Validator 5.2.4.Final
06-12 13:58:05.324 [egate$BeanPostProcessorChecker][INFO ] Bean 'aopConfig' of type [class snp.config.AopConfig$$EnhancerBySpringCGLIB$$cd3a42b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:05.506 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [class org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$1d44bbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:05.589 [nnotationActionEndpointMapping][INFO ] Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-12 13:58:05.660 [egate$BeanPostProcessorChecker][INFO ] Bean 'mybatisConfig' of type [class snp.config.MybatisConfig$$EnhancerBySpringCGLIB$$a944b465] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.114 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSource_default' of type [class org.apache.tomcat.jdbc.pool.DataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.121 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3f302a1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.169 [egate$BeanPostProcessorChecker][INFO ] Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.181 [egate$BeanPostProcessorChecker][INFO ] Bean 'dataSourceInitializer' of type [class org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.197 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionManager' of type [class org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.202 [egate$BeanPostProcessorChecker][INFO ] Bean 'transactionConfig' of type [class snp.config.TransactionConfig$$EnhancerBySpringCGLIB$$56b9910] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.227 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdvice' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.233 [egate$BeanPostProcessorChecker][INFO ] Bean 'txAdviceAdvisor' of type [class org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.257 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [class org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f5ea4ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.482 [egate$BeanPostProcessorChecker][INFO ] Bean 'objectPostProcessor' of type [class org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.487 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@b18c4' of type [class org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.523 [egate$BeanPostProcessorChecker][INFO ] Bean 'enableGlobalAuthenticationAutowiredConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.532 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeUserDetailsBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.539 [egate$BeanPostProcessorChecker][INFO ] Bean 'initializeAuthenticationProviderBeanManagerConfigurer' of type [class org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.552 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration' of type [class org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration$$EnhancerBySpringCGLIB$$5c908428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.840 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityProperties' of type [class org.springframework.boot.autoconfigure.security.SecurityProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.861 [egate$BeanPostProcessorChecker][INFO ] Bean 'springBootAuthenticationConfigurerAdapter' of type [class org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration$SpringBootAuthenticationConfigurerAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.871 [egate$BeanPostProcessorChecker][INFO ] Bean 'bootGlobalAuthenticationConfigurationAdapter' of type [class org.springframework.boot.autoconfigure.security.BootGlobalAuthenticationConfiguration$BootGlobalAuthenticationConfigurationAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.874 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration' of type [class org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$$EnhancerBySpringCGLIB$$41b3596d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:06.896 [egate$BeanPostProcessorChecker][INFO ] Bean 'authenticationManagerBuilder' of type [class org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.472 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionFactory_default' of type [class snp.spring.mybatis.ProxySqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.491 [egate$BeanPostProcessorChecker][INFO ] Bean 'sqlSessionTemplate_default' of type [class org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.497 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.502 [egate$BeanPostProcessorChecker][INFO ] Bean 'userRepo' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.519 [egate$BeanPostProcessorChecker][INFO ] Bean '__before_repo_method__' of type [class snp.config.AopConfig$$Lambda$9/1906029492] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.539 [egate$BeanPostProcessorChecker][INFO ] Bean '__after_repo_method__' of type [class snp.config.AopConfig$$Lambda$10/1807634633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.545 [egate$BeanPostProcessorChecker][INFO ] Bean 'userAuthenticationProvider' of type [class snp.infra.security.component.UserAuthenticationProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.554 [egate$BeanPostProcessorChecker][INFO ] Bean 'securityConfig.MethodSecurityConfigurer' of type [class snp.config.SecurityConfig$MethodSecurityConfigurer$$EnhancerBySpringCGLIB$$c0dc54bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.573 [egate$BeanPostProcessorChecker][INFO ] Bean 'methodSecurityMetadataSource' of type [class org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:07.600 [egate$BeanPostProcessorChecker][INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d3c86be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-12 13:58:08.341 [TomcatEmbeddedServletContainer][INFO ] Tomcat initialized with port(s): 8001 (http)
06-12 13:58:08.371 [    o.a.c.core.StandardService][INFO ] Starting service Tomcat
06-12 13:58:08.372 [     o.a.c.core.StandardEngine][INFO ] Starting Servlet Engine: Apache Tomcat/8.5.6
06-12 13:58:08.831 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring embedded WebApplicationContext
06-12 13:58:08.832 [ o.s.web.context.ContextLoader][INFO ] Root WebApplicationContext: initialization completed in 5527 ms
06-12 13:58:09.442 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
06-12 13:58:09.445 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
06-12 13:58:09.448 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
06-12 13:58:09.450 [s.b.w.s.FilterRegistrationBean][INFO ] Mapping filter: 'requestContextFilter' to: [/*]
06-12 13:58:09.454 [ingFilterProxyRegistrationBean][INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
06-12 13:58:09.455 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'dispatcherServlet' to [/]
06-12 13:58:09.457 [.b.w.s.ServletRegistrationBean][INFO ] Mapping servlet: 'messageDispatcherServlet' to [/services/*]
06-12 13:58:11.482 [s.w.DefaultSecurityFilterChain][INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c91530d, org.springframework.security.web.context.SecurityContextPersistenceFilter@42aae04d, org.springframework.security.web.header.HeaderWriterFilter@135a8c6f, org.springframework.security.web.authentication.logout.LogoutFilter@28ee7bee, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@149b0577, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3679d92e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ba17be6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d70638, org.springframework.security.web.session.SessionManagementFilter@3d19d85, org.springframework.security.web.access.ExceptionTranslationFilter@59fbb34, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1fc713c9]
06-12 13:58:11.791 [a.RequestMappingHandlerAdapter][INFO ] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@367ffa75: startup date [Mon Jun 12 13:58:03 KST 2017]; root of context hierarchy
06-12 13:58:11.955 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus/{parentMenu}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findMenusByParent(java.lang.String)
06-12 13:58:11.957 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[POST]}" onto public int snp.app.common.CommonController.saveMenus(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-12 13:58:11.958 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateMenu(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-12 13:58:11.959 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[POST]}" onto public int snp.app.common.CommonController.updateRole(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
06-12 13:58:11.965 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/{grpCd}/code],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findCodes(java.lang.String)
06-12 13:58:11.968 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu],methods=[PUT]}" onto public int snp.app.common.CommonController.insertMenu(java.util.Map<java.lang.String, java.lang.Object>)
06-12 13:58:11.971 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoleMenus(java.lang.String)
06-12 13:58:11.974 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role],methods=[PUT]}" onto public int snp.app.common.CommonController.insertRole(java.util.Map<java.lang.String, java.lang.Object>)
06-12 13:58:11.981 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/role/{roleCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteRole(java.lang.String)
06-12 13:58:11.985 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/roles],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findRoles()
06-12 13:58:11.986 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menu/{menuCd}],methods=[DELETE]}" onto public int snp.app.common.CommonController.deleteMenu(java.lang.String)
06-12 13:58:11.989 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/common/menus],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.CommonController.findAllMenus()
06-12 13:58:11.992 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.String)
06-12 13:58:11.993 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/find/{page}/{keyword}],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.common.UserController.findUsers(java.lang.Integer,java.lang.String)
06-12 13:58:11.994 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.common.UserController.findUsers(java.lang.Integer)
06-12 13:58:11.999 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user/{userSeq}],methods=[DELETE]}" onto public int snp.app.common.UserController.deleteUser(java.lang.Integer)
06-12 13:58:12.000 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[POST || PUT]}" onto public int snp.app.common.UserController.saveUser(java.util.Map<java.lang.String, java.lang.Object>)
06-12 13:58:12.001 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/user],methods=[GET]}" onto public snp.infra.user.model.User snp.app.common.UserController.getLoggedInUser()
06-12 13:58:12.007 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level2],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailGrade(java.lang.String)
06-12 13:58:12.010 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpidetail/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiDetailRate(java.lang.String)
06-12 13:58:12.016 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics-corp/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.findCorpAvg2Excel(javax.servlet.http.HttpServletResponse,int) throws java.lang.Exception
06-12 13:58:12.017 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/cooperationkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findCooperationKpi(int,int)
06-12 13:58:12.019 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorRate(java.lang.String)
06-12 13:58:12.020 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-sector/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartSectorGrade(java.lang.String)
06-12 13:58:12.021 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/level1],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiGrade(java.lang.String)
06-12 13:58:12.022 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/corps],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorps(java.lang.String)
06-12 13:58:12.023 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-kpi/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartKpiRate(java.lang.String)
06-12 13:58:12.024 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/corp],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorp(java.lang.String)
06-12 13:58:12.026 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeRate()
06-12 13:58:12.030 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionRate(java.lang.String)
06-12 13:58:12.031 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/savekpi],methods=[POST]}" onto public int snp.app.corp.CorpController.saveKpi(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-12 13:58:12.031 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-type/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartTypeGrade()
06-12 13:58:12.032 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.allCorpsKeyword(java.lang.String)
06-12 13:58:12.033 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/villagekpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findVillageKpi(int,int)
06-12 13:58:12.033 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/rate],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeRate(java.lang.String)
06-12 13:58:12.034 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/rate],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllRate()
06-12 13:58:12.035 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/socialkpi],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.findSocialKpi(int,int)
06-12 13:58:12.036 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/analytics/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.gridCorpKeyword(java.lang.String)
06-12 13:58:12.036 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-all/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartAllGrade()
06-12 13:58:12.037 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-grade/grade],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.corp.CorpController.chartGradeGrade(java.lang.String)
06-12 13:58:12.038 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/all-corps/excel],methods=[GET]}" onto public void snp.app.corp.CorpController.allCorps2Excel(javax.servlet.http.HttpServletResponse,int,java.lang.String) throws java.lang.Exception
06-12 13:58:12.038 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/corp/chart-region/grade],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.corp.CorpController.chartRegionGrade(java.lang.String)
06-12 13:58:12.043 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/keyword],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpListKeyword(java.lang.String,java.lang.String)
06-12 13:58:12.044 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteCooperationInfo(java.lang.Integer)
06-12 13:58:12.044 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCooperationnfo(java.lang.Integer)
06-12 13:58:12.047 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteVillageInfo(java.lang.Integer)
06-12 13:58:12.049 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCooperationInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-12 13:58:12.051 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/cooperationList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCooperationList()
06-12 13:58:12.052 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(java.lang.Integer)
06-12 13:58:12.052 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findCorpInfo(int,int)
06-12 13:58:12.053 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findSocialList()
06-12 13:58:12.054 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageList]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findVillageList()
06-12 13:58:12.054 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/corpInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveCorpInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-12 13:58:12.054 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveVillageInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-12 13:58:12.055 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[POST]}" onto public int snp.app.hq.HqController.saveCenterMgm(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)
06-12 13:58:12.056 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/{corpType}/type],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCorpList(java.lang.String)
06-12 13:58:12.056 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialinfo/{CORP_SEQ}],methods=[DELETE]}" onto public int snp.app.hq.HqController.deleteSocialInfo(java.lang.Integer)
06-12 13:58:12.058 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/villageInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findVillageInfo(java.lang.Integer)
06-12 13:58:12.059 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo/{CORP_SEQ}]}" onto public java.util.Map<java.lang.String, java.lang.Object> snp.app.hq.HqController.findSocialInfo(java.lang.Integer)
06-12 13:58:12.060 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/socialInfo],methods=[POST]}" onto public int snp.app.hq.HqController.saveSocialInfo(java.util.Map<java.lang.String, java.lang.Object>)
06-12 13:58:12.061 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/hq/centerMgm],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> snp.app.hq.HqController.findCenterMgm()
06-12 13:58:12.085 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/login],methods=[POST],params=[userId && password]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.login(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws org.springframework.security.core.AuthenticationException
06-12 13:58:12.087 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth/user],methods=[GET]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.authenticatedUser()
06-12 13:58:12.089 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/api/auth],methods=[GET],params=[userId]}" onto snp.infra.user.model.User snp.infra.security.AuthApi.forceAuthenticate(java.lang.String,javax.servlet.http.HttpServletRequest)
06-12 13:58:12.094 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/ || /index || /app/* || /app/*/* || /app/*/*/*]}" onto public java.lang.String snp.infra.security.IndexController.index()
06-12 13:58:12.104 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
06-12 13:58:12.107 [a.RequestMappingHandlerMapping][INFO ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
06-12 13:58:12.218 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/deps/bower/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-12 13:58:12.220 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-12 13:58:12.221 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-12 13:58:12.297 [.w.s.h.SimpleUrlHandlerMapping][INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
06-12 13:58:12.955 [.j.e.a.AnnotationMBeanExporter][INFO ] Registering beans for JMX exposure on startup
06-12 13:58:12.981 [o.a.c.http11.Http11NioProtocol][INFO ] Initializing ProtocolHandler ["http-nio-8001"]
06-12 13:58:13.002 [o.a.c.http11.Http11NioProtocol][INFO ] Starting ProtocolHandler [http-nio-8001]
06-12 13:58:13.058 [o.a.t.util.net.NioSelectorPool][INFO ] Using a shared selector for servlet write/read
06-12 13:58:13.125 [TomcatEmbeddedServletContainer][INFO ] Tomcat started on port(s): 8001 (http)
06-12 13:58:13.136 [         snp.SocialApplication][INFO ] Started SocialApplication in 10.399 seconds (JVM running for 11.252)
06-12 13:58:13.210 [   o.a.c.c.C.[.[localhost].[/]][INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
06-12 13:58:13.211 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization started
06-12 13:58:13.266 [     o.s.w.s.DispatcherServlet][INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
06-12 13:58:13.351 [   snp.infra.security.Security][WARN ] Authentication object is not an instance of snp.infra.security.component.UserAuthentication. (org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS)
06-12 13:58:24.325 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT USER_ID, USER_NAME, CORP_SEQ, EMAIL FROM USERS WHERE USER_ID = 'admin' 

06-12 13:58:24.339 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT PASSWORD FROM USERS WHERE USER_ID = 'admin' 

06-12 13:58:24.341 [   snp.infra.security.Security][INFO ] User(admin, 관리자) was logged in. (0:0:0:0:0:0:0:1)
06-12 13:58:25.617 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:58:27.107 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:59:04.912 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:59:04.914 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:59:33.865 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:59:33.867 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:59:35.322 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 13:59:55.036 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 13:59:55.038 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:00:08.448 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 14:00:08.452 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-12 14:00:09.982 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:00:09.991 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-12 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:00:09.991 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민1262 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:00:10.124 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'VILL_TYPE' 

06-12 14:00:10.124 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-12 14:00:10.136 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_VALUE' 

06-12 14:00:10.142 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
11. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-12 14:00:10.144 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:00:10.146 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
1. SELECT 1 

06-12 14:00:10.146 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:00:10.151 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:00:10.151 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:00:10.152 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:00:10.166 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-12 14:00:10.172 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
1. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-12 14:07:25.299 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:07:25.302 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-12 14:07:25.447 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:07:25.449 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-12 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:07:25.450 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민1262 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:07:25.539 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'VILL_TYPE' 

06-12 14:07:25.539 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-12 14:07:25.540 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
11. SELECT 1 

06-12 14:07:25.544 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-12 14:07:25.544 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:07:25.544 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
11. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:07:25.545 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:07:25.553 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:07:25.565 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
11. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-12 14:07:25.565 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_VALUE' 

06-12 14:07:25.573 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-12 14:07:27.028 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:08:44.482 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:08:44.485 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:08:46.914 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:09:07.910 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:09:07.912 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:09:09.091 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:09:44.307 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:09:44.310 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:09:45.676 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 14:10:32.087 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:10:32.090 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:10:34.414 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:10:35.344 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:10:35.346 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:10:50.857 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:10:50.861 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:10:51.936 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:11:14.528 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:11:14.530 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:11:17.275 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-12 14:11:17.859 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:11:17.897 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT L1.KPI_CD AS L1_KPI_CD , L1.KPI_NM AS L1_KPI_NM , L2.KPI_CD AS L2_KPI_CD , L2.KPI_NM 
AS L2_KPI_NM , L3.KPI_CD AS L3_KPI_CD , L3.KPI_NM AS L3_KPI_NM , L3.IS_GRADE AS IS_GRADE , 
132 AS CORP_SEQ , 2016 AS YEAR , null AS STATUS FROM ( SELECT * FROM VILLAGE_KPI WHERE LEVEL 
= 1 ) L1 INNER JOIN ( SELECT * FROM VILLAGE_KPI WHERE LEVEL = 2 ) L2 ON (L1.KPI_CD = L2.P_KPI_CD) 
INNER JOIN ( SELECT * FROM VILLAGE_KPI WHERE LEVEL = 3 ) L3 ON (L2.KPI_CD = L3.P_KPI_CD) ORDER 
BY L3.LEVEL, L3.DISP_ORD 

06-12 14:11:17.923 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010306' 

06-12 14:11:17.940 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010101' 

06-12 14:11:17.951 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010102' 

06-12 14:11:17.961 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010103' 

06-12 14:11:17.972 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010104' 

06-12 14:11:17.981 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010105' 

06-12 14:11:17.989 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010201' 

06-12 14:11:17.996 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010202' 

06-12 14:11:18.002 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010203' 

06-12 14:11:18.008 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010204' 

06-12 14:11:18.014 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010205' 

06-12 14:11:18.022 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010206' 

06-12 14:11:18.027 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010207' 

06-12 14:11:18.034 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010208' 

06-12 14:11:18.043 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010209' 

06-12 14:11:18.051 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010210' 

06-12 14:11:18.057 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010301' 

06-12 14:11:18.065 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010302' 

06-12 14:11:18.071 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010303' 

06-12 14:11:18.076 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010304' 

06-12 14:11:18.082 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010305' 

06-12 14:11:18.088 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010401' 

06-12 14:11:18.094 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '010402' 

06-12 14:11:18.100 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '020101' 

06-12 14:11:18.107 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '020102' 

06-12 14:11:18.112 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '020103' 

06-12 14:11:18.118 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '020104' 

06-12 14:11:18.123 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '020105' 

06-12 14:11:18.128 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '020201' 

06-12 14:11:18.134 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '020202' 

06-12 14:11:18.139 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '030101' 

06-12 14:11:18.145 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '030102' 

06-12 14:11:18.154 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '030103' 

06-12 14:11:18.162 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '030201' 

06-12 14:11:18.169 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '030202' 

06-12 14:11:18.175 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '030203' 

06-12 14:11:18.182 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '030301' 

06-12 14:11:18.187 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040101' 

06-12 14:11:18.192 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040102' 

06-12 14:11:18.199 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040103' 

06-12 14:11:18.205 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040104' 

06-12 14:11:18.210 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040105' 

06-12 14:11:18.215 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040201' 

06-12 14:11:18.221 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040202' 

06-12 14:11:18.226 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040203' 

06-12 14:11:18.233 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040204' 

06-12 14:11:18.239 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040205' 

06-12 14:11:18.244 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040301' 

06-12 14:11:18.250 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040302' 

06-12 14:11:18.260 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040303' 

06-12 14:11:18.268 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040304' 

06-12 14:11:18.276 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040401' 

06-12 14:11:18.281 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040402' 

06-12 14:11:18.287 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040403' 

06-12 14:11:18.292 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040404' 

06-12 14:11:18.297 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040405' 

06-12 14:11:18.302 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040501' 

06-12 14:11:18.307 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040502' 

06-12 14:11:18.313 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040503' 

06-12 14:11:18.318 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040504' 

06-12 14:11:18.323 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040505' 

06-12 14:11:18.328 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 132 AND YEAR = 2016 AND 
KPI_CD = '040601' 

06-12 14:11:20.127 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-12 14:11:20.830 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
11. SELECT 1 

06-12 14:11:20.832 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
11. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-12 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:11:20.833 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민1322 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:11:20.886 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
11. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'VILL_TYPE' 

06-12 14:11:20.887 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:11:20.887 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:11:20.891 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
11. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:11:20.888 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:11:20.892 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-12 14:11:20.893 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 14:11:20.894 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:11:20.896 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:11:20.898 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-12 14:11:20.911 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_VALUE' 

06-12 14:11:20.911 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-12 14:11:20.911 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-12 14:12:41.802 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 14:12:41.804 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-12 14:12:41.923 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:12:41.926 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-12 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:12:41.927 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민1322 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:12:41.978 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'VILL_TYPE' 

06-12 14:12:41.979 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-12 14:12:41.979 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:12:41.982 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-12 14:12:41.982 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:12:41.983 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:12:41.983 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:12:41.985 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:12:41.998 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_VALUE' 

06-12 14:12:42.008 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-12 14:12:42.014 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-12 14:12:43.206 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:15:31.198 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:15:31.200 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:15:32.874 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:15:34.100 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:15:34.994 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:15:34.995 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:15:36.500 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:15:38.332 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:15:38.334 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:15:39.902 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 14:15:42.024 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:15:42.028 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-12 14:16:47.469 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:16:47.471 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:16:47.479 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:16:49.005 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:16:49.006 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:16:49.009 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:16:50.362 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 14:16:52.287 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:16:52.291 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:19:07.959 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:19:07.961 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:19:07.965 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:19:07.970 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:19:07.971 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:19:07.973 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:22:50.425 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:22:50.427 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:22:53.041 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT L1.KPI_CD AS L1_KPI_CD , L1.KPI_NM AS L1_KPI_NM , L2.KPI_CD AS L2_KPI_CD , L2.KPI_NM 
AS L2_KPI_NM , L3.KPI_CD AS L3_KPI_CD , L3.KPI_NM AS L3_KPI_NM , L3.IS_GRADE AS IS_GRADE , 
33 AS CORP_SEQ , 2016 AS YEAR , null AS STATUS FROM ( SELECT * FROM SOCIAL_KPI WHERE LEVEL 
= 1 ) L1 INNER JOIN ( SELECT * FROM SOCIAL_KPI WHERE LEVEL = 2 ) L2 ON (L1.KPI_CD = L2.P_KPI_CD) 
INNER JOIN ( SELECT * FROM SOCIAL_KPI WHERE LEVEL = 3 ) L3 ON (L2.KPI_CD = L3.P_KPI_CD) ORDER 
BY L3.LEVEL, L3.DISP_ORD 

06-12 14:22:53.054 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010101' 

06-12 14:22:53.065 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010102' 

06-12 14:22:53.075 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010103' 

06-12 14:22:53.080 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010104' 

06-12 14:22:53.090 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010105' 

06-12 14:22:53.097 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010106' 

06-12 14:22:53.106 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010201' 

06-12 14:22:53.111 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010202' 

06-12 14:22:53.117 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010203' 

06-12 14:22:53.123 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010204' 

06-12 14:22:53.129 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010205' 

06-12 14:22:53.134 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010206' 

06-12 14:22:53.139 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010207' 

06-12 14:22:53.145 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010208' 

06-12 14:22:53.151 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010209' 

06-12 14:22:53.156 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010210' 

06-12 14:22:53.161 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010211' 

06-12 14:22:53.170 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010301' 

06-12 14:22:53.177 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010302' 

06-12 14:22:53.184 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010303' 

06-12 14:22:53.194 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010304' 

06-12 14:22:53.200 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010305' 

06-12 14:22:53.206 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010306' 

06-12 14:22:53.211 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010401' 

06-12 14:22:53.220 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '010402' 

06-12 14:22:53.225 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '020101' 

06-12 14:22:53.232 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '020102' 

06-12 14:22:53.242 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '020103' 

06-12 14:22:53.249 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '020104' 

06-12 14:22:53.257 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '020105' 

06-12 14:22:53.264 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '020201' 

06-12 14:22:53.270 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '020202' 

06-12 14:22:53.274 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '020203' 

06-12 14:22:53.280 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '030101' 

06-12 14:22:53.286 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '030102' 

06-12 14:22:53.294 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '030103' 

06-12 14:22:53.300 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '030201' 

06-12 14:22:53.305 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '030202' 

06-12 14:22:53.310 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '030203' 

06-12 14:22:53.316 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '030301' 

06-12 14:22:53.322 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040101' 

06-12 14:22:53.326 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040102' 

06-12 14:22:53.332 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040103' 

06-12 14:22:53.337 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040104' 

06-12 14:22:53.342 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040105' 

06-12 14:22:53.347 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040201' 

06-12 14:22:53.355 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040202' 

06-12 14:22:53.361 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040203' 

06-12 14:22:53.368 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040204' 

06-12 14:22:53.373 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040205' 

06-12 14:22:53.378 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040301' 

06-12 14:22:53.386 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040302' 

06-12 14:22:53.395 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040303' 

06-12 14:22:53.404 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040304' 

06-12 14:22:53.410 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040401' 

06-12 14:22:53.417 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040402' 

06-12 14:22:53.426 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040403' 

06-12 14:22:53.438 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040404' 

06-12 14:22:53.450 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040405' 

06-12 14:22:53.458 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040501' 

06-12 14:22:53.465 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040502' 

06-12 14:22:53.472 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040503' 

06-12 14:22:53.477 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040504' 

06-12 14:22:53.484 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040505' 

06-12 14:22:53.494 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 33 AND YEAR = 2016 AND KPI_CD 
= '040601' 

06-12 14:23:01.154 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:23:01.156 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 14:23:02.325 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:23:02.325 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-13 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:23:02.328 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민1823 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 14:23:02.398 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:23:02.398 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'COOP_TYPE' 

06-12 14:23:02.398 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:23:02.402 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:23:02.404 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'COOP_CONFIG' 

06-12 14:23:02.417 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-12 14:23:02.421 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:23:02.427 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'ESTABLISH_PURPOSE' 

06-12 14:23:02.428 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LOCAL_PURPOSE' 

06-12 14:23:02.430 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'LOCAL_PROBLEM' 

06-12 14:23:02.434 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-12 14:36:04.499 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:36:04.501 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:36:04.502 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:36:04.504 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:36:04.504 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:36:04.511 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:37:14.764 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:37:14.767 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:37:14.767 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:37:14.767 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:37:14.768 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:37:14.769 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:37:14.779 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:37:50.116 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:37:50.118 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:37:50.118 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:37:50.119 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:37:50.119 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:37:50.123 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:37:50.132 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:40:02.443 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:40:02.445 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:40:02.445 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:40:02.445 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:40:02.448 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:40:02.451 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:40:02.459 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:41:42.027 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:41:42.029 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:41:42.030 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:41:42.032 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:41:42.034 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:41:42.042 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:51:38.112 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:51:38.112 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:51:38.113 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:51:38.113 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:51:38.117 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:51:38.119 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:51:53.644 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:51:53.646 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 14:51:57.646 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 14:51:57.646 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:51:57.647 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:51:57.647 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 14:51:57.653 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:51:57.659 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:51:57.661 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:51:57.662 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:55:49.940 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 14:55:49.941 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 14:55:49.941 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:55:49.942 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:55:49.942 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:55:49.945 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:55:49.951 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:57:39.362 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:57:39.366 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 14:57:42.154 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 14:57:43.893 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:57:43.894 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:57:43.897 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:57:43.898 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 14:57:43.899 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:57:43.907 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 14:58:45.369 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 14:58:45.371 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 14:58:45.371 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 14:58:45.372 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 14:58:45.379 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 14:58:45.383 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:03:40.520 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 15:03:40.522 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:03:40.523 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 15:03:40.525 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:03:40.525 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:03:40.533 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:03:45.220 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 15:03:45.221 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:03:45.222 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 15:03:45.224 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:03:45.225 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:03:45.230 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:03:45.231 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:04:32.140 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:04:32.141 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 15:04:32.141 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:04:32.144 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:04:32.152 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:04:32.156 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:04:52.611 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:04:52.611 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 15:04:52.613 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:04:52.613 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:04:52.619 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:04:52.620 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:04:54.683 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:04:54.685 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:04:54.687 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 15:04:54.687 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:04:54.690 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:05:12.700 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 15:05:12.701 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:05:12.702 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:05:12.708 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:05:12.722 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:05:12.727 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:05:13.843 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:05:13.846 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:05:13.850 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:05:13.850 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:09:13.071 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:09:13.072 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 15:09:13.073 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:09:13.074 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:09:13.080 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:09:13.087 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:09:14.227 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:09:14.231 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:09:14.235 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:09:14.240 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:09:15.098 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:09:15.099 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:09:15.103 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:09:15.103 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:24:31.108 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:24:31.108 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 15:24:31.109 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:24:31.109 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:24:31.117 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:24:31.123 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:25:00.029 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 15:25:00.029 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:25:00.030 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 15:25:00.030 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:25:00.031 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:25:00.039 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:25:00.040 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 15:25:00.044 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:34:04.290 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 15:34:04.292 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 15:34:13.145 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 15:34:13.147 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-12 15:34:14.154 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 15:34:14.156 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민-12 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 15:34:14.157 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CORP_TYPE /* 기업유형 */ ,CORP_SEQ /* 기업 SEQ */ , CORP_NM /*기업명*/ , OPEN_DT /*f1 설립년도*/ 
, SE_YN /*f2 인증여부*/ , ORG_TYPE /*f3 조직형태*/ , BEFORE_TYPE /*f4 사,마:이전 조직형태 협:조합원구성 */ , LEG_TYPE1 
/*f5 법적 유형 1*/ , LEG_TYPE2 /*f6 법적 유형 2*/ , MAIN_TYPE /*f7 주요 활동 업종 분야*/ , SECTOR /*f8 업종*/ 
, HISTORY /*f9 대표자 과거 경력*/ , REGION /*f10 회사 소재지*/ , MAIN_VALUE1 /*f11 핵심 사회적 가치 1 */ , MAIN_VALUE2 
/*f12 핵심 사회적 가치 1 */ , LIFE_CHG /*f13 사:핵심 사회적가치 중요도 1, 협: 지역사회 기여목적*/ , LOCAL_SOL /*f14 사:핵심 
사회적가치 중요도 2 협: 해결하고자하는 지역문제*/ , CITY_ENL /*f15 핵심 사회적가치 중요도 3*/ , WEAK_CHG /*f16 핵심 사회적가치 중요도 
4*/ , WEAK_ENL /*f17 핵심 사회적가치 중요도 5*/ , PROD_NM1 /*f22 주요제품명 1*/ , PROD_NM2 /*f23 주요제품명 1*/ 
, PROD_NM3 /*f24 주요제품명 1*/ , PROD_NM1_PCT /*f25 주요제품명1 %*/ , PROD_NM2_PCT /*f26 주요제품명2 %*/ 
, PROD_NM3_PCT /*f27 주요제품명3 %*/ , PROD_ETC_PCT /*f28 기타 생산제품 %*/ , SERVICE_NM1 /*f22 주요 서비스명 
1*/ , SERVICE_NM2 /*f23 주요 서비스명 1*/ , SERVICE_NM3 /*f24 주요 서비스명 1*/ , SERVICE_NM1_PCT /*f25 
주요 서비스명1 %*/ , SERVICE_NM2_PCT /*f26 주요 서비스명 %*/ , SERVICE_NM3_PCT /*f27 주요 서비스명 %*/ , SERVICE_ETC_PCT 
/*f28 기타 서비스명 %*/ , IN_TOT1 /*f36 원재료 구입처 대구 */ , IN_SEE1 /*f44 원재료 구입처 사회적경제기업 */ , IN_TOT2 
/*f37 원재료 구입처 경북 */ , IN_SEE2 /*f45 원재료 구입처 사회적경제기업 */ , IN_TOT3 /*f38 원재료 구입처 기타 */ , IN_SEE3 
/*f46 원재료 구입처 사회적경제기업 (전체-대구-경북) */ , OUT_TOT1 /*f52 상품 판매처 대구 */ , OUT_SEE1 /*f60 원재료 구입처 
사회적경제기업 */ , OUT_TOT2 /*f53 상품 판매처 경북 */ , OUT_SEE2 /*f61 원재료 구입처 사회적경제기업 */ , OUT_TOT3 /*f59 
상품 판매처 기타 */ , OUT_SEE3 /*f67 원재료 구입처 사회적경제기업 (전체-대구-경북)*/ , SAILS_PCT1 /*f92 고객비중 - 민간기업 */ 
, SAILS_PCT2 /*f93 고객비중 - 민간소비자 */ , SAILS_PCT3 /*f94 고객비중 - 공공기관 */ , SAILS_PCT4 /*f95 고객비중 
- 취약계층 대상자 */ , SAILS_PCT5 /*f96 고객비중 - 기타 */ , TOT_PAR /*g1 전체 참여자수 */ , TOT_EMP /*g2 전체 근로자수 
*/ , MALE_CNT /*g3 남자 */ , FMALE_CNT /*g4 여자 */ , REG_EMP_CNT /*g5 정규직 근로자수 */ , REG_WEEK_TIME 
/*g6 정규직 주당평균 근로시간 */ , REG_MONTH_PAY /*g7 정규직 월 평균임금 */ , REG_EMP_TIME /*g8 정규직 평균 근속기간 */ 
, COM_EMP_CNT /*g9 상용직 근로자수 */ , COM_WEEK_TIME /*g10 상용직 주당평균 근로시간 */ , COM_MONTH_PAY /*g11 
상용직 월 평균임금 */ , COM_EMP_TIME /*g12 상용직 평균 근속기간 */ , CONTRACT_EMP_CNT /*g13 계약직(임시직) 근로자수 */ 
, CONTRACT_WEEK_TIME/*g14 계약직(임시직) 주당평균 근로시간 */ , CONTRACT_MONTH_PAY/*g15 계약직(임시직) 월 평균임금 */ 
, CONTRACT_EMP_TIME /*g16 계약직(임시직) 평균 근속기간 */ , TIME_EMP_CNT /*g17 시간제(파트타임) 근로자수 */ , TIME_WEEK_TIME 
/*g18 시간제(파트타임) 주당평균 근로시간 */ , TIME_MONTH_PAY /*g19 시간제(파트타임) 월 평균임금 */ , TIME_EMP_TIME /*g20 
시간제(파트타임) 평균 근속기간 */ , SPE_EMP_CNT /*g21 특수고용직 근로자수 */ , SPE_WEEK_TIME /*g22 특수고용직 주당평균 근로시간 
*/ , SPE_MONTH_PAY /*g23 특수고용직 월 평균임금 */ , SPE_EMP_TIME /*g24 특수고용직 평균 근속기간 */ , VOL_EMP_CNT 
/*g25 자원봉사자 근로자수 */ , VOL_WEEK_TIME /*g26 자원봉사자 주당평균 근로시간 */ , AVG_YEAR /*g27 평균 연령 */ , WEAK_TOT_EMP 
/*g28 취약계층 근로자수 */ , WEAK_MALE_CNT /*g29 취약계층 남자수 */ , WEAK_FMALE_CNT /*g30 취약계층 여자수 */ , WEAK_REG_EMP_CNT 
/*g31 정규직 근로자수 */ , WEAK_REG_WEEK_TIME /*g32 정규직 주당평균 근로시간 */ , WEAK_REG_MONTH_PAY /*g33 정규직 
월 평균임금 */ , WEAK_REG_EMP_TIME /*g34 정규직 평균 근속기간 */ , WEAK_COM_EMP_CNT /*g35 상용직 근로자수 */ , WEAK_COM_WEEK_TIME 
/*g36 상용직 주당평균 근로시간 */ , WEAK_COM_MONTH_PAY /*g37 상용직 월 평균임금 */ , WEAK_COM_EMP_TIME /*g38 상용직 
평균 근속기간 */ , WEAK_CONTRACT_EMP_CNT /*g39 계약직(임시직) 근로자수 */ , WEAK_CONTRACT_WEEK_TIME /*g40 계약직(임시직) 
주당평균 근로시간 */ , WEAK_CONTRACT_MONTH_PAY /*g41 계약직(임시직) 월 평균임금 */ , WEAK_CONTRACT_EMP_TIME /*g42 
계약직(임시직) 평균 근속기간 */ , WEAK_TIME_EMP_CNT /*g43 시간제(파트타임) 근로자수 */ , WEAK_TIME_WEEK_TIME /*g44 
시간제(파트타임) 주당평균 근로시간 */ , WEAK_TIME_MONTH_PAY /*g45 시간제(파트타임) 월 평균임금 */ , WEAK_TIME_EMP_TIME 
/*g46 시간제(파트타임) 평균 근속기간 */ , WEAK_SPE_EMP_CNT /*g47 특수고용직 근로자수 */ , WEAK_SPE_WEEK_TIME /*g48 
특수고용직 주당평균 근로시간 */ , WEAK_SPE_MONTH_PAY /*g49 특수고용직 월 평균임금 */ , WEAK_SPE_EMP_TIME /*g50 특수고용직 
평균 근속기간 */ , WEAK_AVG_YEAR /*g51 평균 연령 */ , WEAK_TYPE1_CNT /*g52 취약계층 고령자 고용인원 */ , WEAK_TYPE2_CNT 
/*g53 취약계층 장애인 고용인원 */ , WEAK_TYPE3_CNT /*g54 취약계층 저소득 고용인원 */ , WEAK_TYPE4_CNT /*g55 취약계층 
경력단절여성 고용인원 */ , WEAK_TYPE5_CNT /*g56 취약계층 장기실업 고용인원 */ , WEAK_TYPE6_CNT /*g57 취약계층 결혼이민 고용인원 
*/ , WEAK_TYPE7_CNT /*g58 취약계층 기타 고용인원 */ , FIRST_REASON /*h1 인력관리 애로사항 첫번째 */ , SECOND_REASON 
/*h2 인력관리 애로사항 두번째 */ , ETC_REASON /* 기타사항이 있을때 - 인터페이스 고민882 */ , CORP_ASSET /*h3 자산 */ , 
CORP_CAPITAL /*h4 자본 */ , CORP_DEBT /*h5 부채 */ , CORP_SALES /*h6 매출액 */ , CORP_SALES_PROFIT 
/*h7 매출 총이익 */ , CORP_LABOR_COST /*h8 노무비 */ , CORP_TAX /*h9 법인세 */ , CORP_OP_PROFIT /*h10 
영업이익 */ , CORP_NET_INCOM /*h14 당기순이익 */ , GOV_SUP_ASSET /*h12 정부지원금 - 건물 등 자산취득 관련 지원금 */ , 
GOV_SUP_COST /*h11 징부지원금 - 인건비 등 비용관련 지원금 */ , SPONSOR_DONATE /*h13 각종 후원금, 기부금 */ , FUNDS_REVENUE 
/*h15 자금조달비중 - 수익활동 */ , FUNDS_DONATE /*h16 기부금 */ , FUNDS_SUPP /*h17 정부지원금 */ , FUNDS_LOAN 
/*h18 대출(차입) */ , FUNDS_ETC /*h19 기타 */ , NETWORK_TARGET_YN /* 네트워크대상 유무*/ , NETWORK_TARGET_COUNT 
/* 네트워크대상 횟수*/ , NETWORK_BUNIT_YN /* 네트워크 기초단체 유무*/ , NETWORK_BUNIT_COUNT /* 네트워크 기초단체 횟수*/ 
, NETWORK_GUNIT_YN /* 네트워크 광역단체 유무*/ , NETWORK_GUNIT_COUNT /* 네트워크 광역단체 횟수*/ , NETWORK_TYPE_YN 
/* 네트워크 업종 유무*/ , NETWORK_TYPE_COUNT /* 네트워크 업종 횟수*/ , NETWORK_ISSUE_YN /*네트워크 이슈 유무 */ , NETWORK_ISSUE_COUNT 
/*네트워크 이슈 카운트 */ , YOUTH_COUNT /*청년층 근로자 수 */ , SALES_EMP_RATE /*노동생산성(1인당 매출액=매출액/근로자수)*/ 
, DEMO_DECISION_1 /*민주적의사결정 구조 - 총회 개최 횟수*/ , DEMO_DECISION_2 /*민주적의사결정 구조 - 이사회 개최 횟수*/ , 
DEMO_DECISION_3 /*민주적의사결정 구조 - 운영위원회 개최 횟수*/ , DEMO_DECISION_4 /*민주적의사결정 구조 - 기타 개최 횟수*/ , 
SOCIAL_REINVEST_1 /*사회적목적 재투자 금액 - 일자리창출 금액*/ , SOCIAL_REINVEST_2 /*사회적목적 재투자 금액 - 사회서비스제공 
금액*/ , SOCIAL_REINVEST_3 /*사회적목적 재투자 금액 - 구성원성과급 금액*/ , SOCIAL_REINVEST_4 /*사회적목적 재투자 금액 - 
지역사회 재투자 금액*/ , SOCIAL_REINVEST_5 /*사회적목적 재투자 금액 - 기타 금액*/ , SOCIAL_SERVICE_WEAK /*사회서비스 제공 
인원 -취약계층*/ , SOCIAL_SERVICE_GENERAL /*사회서비스 제공 인원 - 일반*/ , PROFIT_SURPLUS /*이익잉여금*/ , NON_OP_INCOM 
/* 영업외이익 */ FROM CORP_INFO WHERE CORP_SEQ = ? AND CORP_TYPE = ? 

06-12 15:34:14.301 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'VILL_TYPE' 

06-12 15:34:14.301 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'BEFORE_TYPE' 

06-12 15:34:14.308 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 15:34:14.312 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 15:34:14.316 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HISTORY' 

06-12 15:34:14.320 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_VALUE' 

06-12 15:34:14.321 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:34:14.321 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 15:34:14.322 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SEL_IMPORT' 

06-12 15:34:14.328 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'HARD_REASON' 

06-12 15:34:24.991 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:34:24.993 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '2' ORDER 
BY CORP_NM 

06-12 15:34:25.761 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT L1.KPI_CD AS L1_KPI_CD , L1.KPI_NM AS L1_KPI_NM , L2.KPI_CD AS L2_KPI_CD , L2.KPI_NM 
AS L2_KPI_NM , L3.KPI_CD AS L3_KPI_CD , L3.KPI_NM AS L3_KPI_NM , L3.IS_GRADE AS IS_GRADE , 
83 AS CORP_SEQ , 2016 AS YEAR , null AS STATUS FROM ( SELECT * FROM VILLAGE_KPI WHERE LEVEL 
= 1 ) L1 INNER JOIN ( SELECT * FROM VILLAGE_KPI WHERE LEVEL = 2 ) L2 ON (L1.KPI_CD = L2.P_KPI_CD) 
INNER JOIN ( SELECT * FROM VILLAGE_KPI WHERE LEVEL = 3 ) L3 ON (L2.KPI_CD = L3.P_KPI_CD) ORDER 
BY L3.LEVEL, L3.DISP_ORD 

06-12 15:34:25.779 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010306' 

06-12 15:34:25.790 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010101' 

06-12 15:34:25.799 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010102' 

06-12 15:34:25.809 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010103' 

06-12 15:34:25.818 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010104' 

06-12 15:34:25.827 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010105' 

06-12 15:34:25.839 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010201' 

06-12 15:34:25.850 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010202' 

06-12 15:34:25.857 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010203' 

06-12 15:34:25.866 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010204' 

06-12 15:34:25.872 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010205' 

06-12 15:34:25.880 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010206' 

06-12 15:34:25.888 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010207' 

06-12 15:34:25.896 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010208' 

06-12 15:34:25.905 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010209' 

06-12 15:34:25.916 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010210' 

06-12 15:34:25.924 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010301' 

06-12 15:34:25.932 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010302' 

06-12 15:34:25.939 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010303' 

06-12 15:34:25.947 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010304' 

06-12 15:34:25.953 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010305' 

06-12 15:34:25.973 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010401' 

06-12 15:34:25.982 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '010402' 

06-12 15:34:25.990 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '020101' 

06-12 15:34:25.999 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '020102' 

06-12 15:34:26.007 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '020103' 

06-12 15:34:26.015 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '020104' 

06-12 15:34:26.027 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '020105' 

06-12 15:34:26.038 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '020201' 

06-12 15:34:26.046 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '020202' 

06-12 15:34:26.054 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '030101' 

06-12 15:34:26.063 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '030102' 

06-12 15:34:26.072 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '030103' 

06-12 15:34:26.080 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '030201' 

06-12 15:34:26.088 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '030202' 

06-12 15:34:26.096 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '030203' 

06-12 15:34:26.106 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '030301' 

06-12 15:34:26.117 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040101' 

06-12 15:34:26.125 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040102' 

06-12 15:34:26.134 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040103' 

06-12 15:34:26.143 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040104' 

06-12 15:34:26.150 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040105' 

06-12 15:34:26.158 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040201' 

06-12 15:34:26.167 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040202' 

06-12 15:34:26.175 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040203' 

06-12 15:34:26.184 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040204' 

06-12 15:34:26.192 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040205' 

06-12 15:34:26.201 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040301' 

06-12 15:34:26.209 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040302' 

06-12 15:34:26.222 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040303' 

06-12 15:34:26.231 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040304' 

06-12 15:34:26.240 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040401' 

06-12 15:34:26.248 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040402' 

06-12 15:34:26.257 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040403' 

06-12 15:34:26.265 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040404' 

06-12 15:34:26.273 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040405' 

06-12 15:34:26.281 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040501' 

06-12 15:34:26.290 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040502' 

06-12 15:34:26.298 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040503' 

06-12 15:34:26.306 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040504' 

06-12 15:34:26.316 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040505' 

06-12 15:34:26.324 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT RESULT AS RESULT , CORP_NM FROM KPI_RESULT WHERE CORP_SEQ = 83 AND YEAR = 2016 AND KPI_CD 
= '040601' 

06-12 15:34:49.497 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 15:34:49.501 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT USER_ID , USER_NAME , CORP_SEQ , EMAIL , PHONE_NO1 , PHONE_NO2 , PASSWORD , ADMIN_YN 
, USE_YN FROM USERS 

06-12 16:02:24.792 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:02:24.803 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:07:54.916 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:07:54.919 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 16:07:56.942 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 16:07:57.641 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:07:57.641 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:07:57.643 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:07:57.646 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:07:57.645 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:08:57.486 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:08:57.487 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:08:57.487 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:08:57.488 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:08:57.489 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:08:57.491 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:08:57.496 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:09:46.588 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:09:46.589 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:09:46.589 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:09:46.590 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:09:46.594 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:09:46.597 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:09:52.584 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:09:52.586 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 16:11:12.713 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:11:12.714 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:11:12.715 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:11:12.715 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:11:12.716 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:11:12.716 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:11:12.721 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:11:33.208 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:11:33.209 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:11:33.209 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:11:33.210 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:11:33.212 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:11:33.219 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:12:35.804 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:12:35.804 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:12:35.805 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:12:35.805 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:12:35.805 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:12:35.809 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:12:35.817 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:12:37.075 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:12:37.076 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:12:37.083 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:12:37.089 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:12:38.202 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:12:38.203 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:12:38.206 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:12:38.207 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:13:05.986 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:13:05.987 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:13:05.987 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:13:05.988 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:13:05.988 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:13:05.991 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:13:05.997 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:14:21.338 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:14:21.339 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:14:21.340 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:14:21.340 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:14:21.344 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:14:21.345 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:14:21.345 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:14:48.704 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:14:48.706 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:14:48.705 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:14:48.706 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:14:48.709 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:14:48.710 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:14:48.715 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:16:43.225 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:16:43.225 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:16:43.228 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:16:43.228 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:16:43.231 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:16:43.232 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:16:43.237 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:18:05.361 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:18:05.361 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:18:05.362 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:18:05.362 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:18:05.368 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:18:05.372 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:18:27.565 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:18:27.566 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:18:27.571 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:18:27.575 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:18:27.581 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:18:58.349 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:18:58.350 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:18:58.350 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:18:58.352 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:18:58.356 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:18:58.356 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:19:57.776 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:19:57.778 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:19:57.778 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:19:57.779 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:19:57.785 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:19:57.792 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:20:45.346 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:20:45.349 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:27:39.953 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:27:39.954 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:27:39.955 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:27:39.956 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:27:39.958 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:27:39.959 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:27:39.960 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:27:57.332 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:27:57.336 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:28:08.125 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:28:08.126 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 16:29:11.631 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:29:11.632 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:29:11.632 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:29:11.632 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:29:11.632 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:29:11.634 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:29:11.639 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:29:27.683 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:29:27.683 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:29:27.684 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:29:27.684 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:29:27.686 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:29:27.688 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:29:27.693 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:29:42.935 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:29:42.936 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:29:42.936 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:29:42.937 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:29:42.936 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:29:42.940 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:29:42.945 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:31:10.252 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:31:10.254 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:31:10.254 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:31:10.255 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:31:10.255 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:31:10.257 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:31:10.258 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:37:17.238 [efaultHandlerExceptionResolver][WARN ] Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: Could not read document: Can not deserialize instance of java.util.ArrayList out of START_OBJECT token
 at [Source: java.io.PushbackInputStream@167afab2; line: 1, column: 1]; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Can not deserialize instance of java.util.ArrayList out of START_OBJECT token
 at [Source: java.io.PushbackInputStream@167afab2; line: 1, column: 1]
06-12 16:37:58.493 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:37:58.495 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 16:40:27.228 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:40:27.230 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:40:27.230 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:40:27.231 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:40:27.231 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:40:27.232 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:40:27.242 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:40:29.163 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 16:40:39.410 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:40:39.410 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:40:39.411 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:40:39.412 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:40:39.415 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:40:39.415 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:40:43.251 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:40:43.254 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:40:43.255 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:40:43.261 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:40:43.267 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:40:43.270 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:44:28.780 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:44:28.782 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:44:28.787 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:44:28.798 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:44:28.803 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:44:37.916 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:44:37.917 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:44:37.917 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:44:37.920 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:44:37.921 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:44:37.922 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:44:37.923 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:45:30.601 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:45:30.603 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:45:30.609 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:45:30.612 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:45:30.603 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:45:30.618 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:45:30.629 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:45:39.482 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:45:39.483 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:45:39.484 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:45:39.486 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:45:39.487 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:45:39.490 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:46:27.380 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 16:46:27.381 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:46:27.381 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:46:27.382 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:46:27.384 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:46:27.385 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:46:27.391 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 16:46:32.661 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:46:32.665 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '3' ORDER 
BY CORP_NM 

06-12 16:46:36.746 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 16:46:36.748 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 16:46:36.748 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 16:46:36.750 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 16:46:36.756 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 16:46:36.758 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 17:03:35.194 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
3. SELECT 1 

06-12 17:03:35.195 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 17:03:35.196 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
3. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 17:03:35.196 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 17:03:35.198 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 17:03:35.198 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 17:03:35.199 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 17:03:35.201 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 17:03:42.674 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 17:03:42.677 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 17:03:42.677 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 17:03:42.678 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 17:03:42.679 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 17:03:42.680 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 17:03:42.687 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 17:06:59.081 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 17:06:59.081 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 17:06:59.082 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 17:06:59.082 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 17:06:59.082 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 17:06:59.083 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 17:06:59.086 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 17:09:46.404 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 17:09:46.405 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 17:09:46.405 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 17:09:46.406 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 17:09:46.406 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 17:09:46.411 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 17:09:46.417 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

06-12 17:09:56.180 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
10. SELECT 1 

06-12 17:09:56.181 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
10. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'SECTOR' 

06-12 17:09:56.181 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
4. SELECT 1 

06-12 17:09:56.181 [                  jdbc.sqlonly][DEBUG]  org.apache.tomcat.jdbc.pool.PooledConnection.validate(PooledConnection.java:509)
2. SELECT 1 

06-12 17:09:56.182 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
4. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'REGION' 

06-12 17:09:56.183 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. /* common.xml findCodes */ SELECT GRP_CD, CD, CD_NM FROM CODE WHERE GRP_CD = 'MAIN_TYPE' 

06-12 17:09:56.193 [                  jdbc.sqlonly][DEBUG]  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
2. SELECT CASE CORP_TYPE WHEN '1' THEN '사회적기업' WHEN '2' THEN '마을기업' ELSE '협동조합' END AS CORP_TYPE 
,CORP_SEQ , CORP_NM , DATE_FORMAT(OPEN_DT, '%Y') AS OPEN_DT , SE_YN , (SELECT CD_NM FROM CODE 
WHERE GRP_CD = 'SE_YN' AND CD = SE_YN) AS SE_YN_NM , ORG_TYPE , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'ORG_TYPE' AND CD = ORG_TYPE) AS ORG_TYPE_NM , REGION , (SELECT CD_NM FROM CODE WHERE 
GRP_CD = 'REGION' AND CD = REGION) AS REGION_NM FROM CORP_INFO WHERE CORP_TYPE = '1' ORDER 
BY CORP_NM 

